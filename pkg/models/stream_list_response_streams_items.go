// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// StreamListResponseStreamsItems stream list response streams items
// swagger:model streamListResponseStreamsItems
type StreamListResponseStreamsItems struct {

	// alert conditions
	AlertConditions StreamListResponseStreamsItemsAlertConditions `json:"alert_conditions"`

	// alert receivers
	AlertReceivers *StreamListResponseStreamsItemsAlertReceivers `json:"alert_receivers,omitempty"`

	// content pack
	ContentPack string `json:"content_pack,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// creator user id
	CreatorUserID string `json:"creator_user_id,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// index set id
	IndexSetID string `json:"index_set_id,omitempty"`

	// is default
	IsDefault bool `json:"is_default,omitempty"`

	// matching type
	MatchingType string `json:"matching_type,omitempty"`

	// outputs
	Outputs StreamListResponseStreamsItemsOutputs `json:"outputs"`

	// remove matches from default stream
	RemoveMatchesFromDefaultStream bool `json:"remove_matches_from_default_stream,omitempty"`

	// rules
	Rules StreamListResponseStreamsItemsRules `json:"rules"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this stream list response streams items
func (m *StreamListResponseStreamsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlertReceivers(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StreamListResponseStreamsItems) validateAlertReceivers(formats strfmt.Registry) error {

	if swag.IsZero(m.AlertReceivers) { // not required
		return nil
	}

	if m.AlertReceivers != nil {

		if err := m.AlertReceivers.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("alert_receivers")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StreamListResponseStreamsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StreamListResponseStreamsItems) UnmarshalBinary(b []byte) error {
	var res StreamListResponseStreamsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
