// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// RotationStrategyDescriptionJSONSchema rotation strategy description Json schema
// swagger:model rotationStrategyDescriptionJsonSchema
type RotationStrategyDescriptionJSONSchema struct {

	// dollar ref
	NrDollarRef string `json:"$ref,omitempty"`

	// dollar schema
	NrDollarSchema string `json:"$schema,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// disallow
	Disallow []interface{} `json:"disallow"`

	// extends
	Extends []interface{} `json:"extends"`

	// id
	ID string `json:"id,omitempty"`

	// readonly
	Readonly bool `json:"readonly,omitempty"`

	// required
	Required bool `json:"required,omitempty"`
}

// Validate validates this rotation strategy description Json schema
func (m *RotationStrategyDescriptionJSONSchema) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisallow(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateExtends(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RotationStrategyDescriptionJSONSchema) validateDisallow(formats strfmt.Registry) error {

	if swag.IsZero(m.Disallow) { // not required
		return nil
	}

	for i := 0; i < len(m.Disallow); i++ {

	}

	return nil
}

func (m *RotationStrategyDescriptionJSONSchema) validateExtends(formats strfmt.Registry) error {

	if swag.IsZero(m.Extends) { // not required
		return nil
	}

	for i := 0; i < len(m.Extends); i++ {

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RotationStrategyDescriptionJSONSchema) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RotationStrategyDescriptionJSONSchema) UnmarshalBinary(b []byte) error {
	var res RotationStrategyDescriptionJSONSchema
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
