// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JournalSummaryResponse journal summary response
// swagger:model JournalSummaryResponse
type JournalSummaryResponse struct {

	// append events per second
	AppendEventsPerSecond int64 `json:"append_events_per_second,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// journal config
	JournalConfig *JournalSummaryResponseJournalConfig `json:"journal_config,omitempty"`

	// journal size
	JournalSize interface{} `json:"journal_size,omitempty"`

	// journal size limit
	JournalSizeLimit interface{} `json:"journal_size_limit,omitempty"`

	// number of segments
	NumberOfSegments int64 `json:"number_of_segments,omitempty"`

	// oldest segment
	OldestSegment strfmt.DateTime `json:"oldest_segment,omitempty"`

	// read events per second
	ReadEventsPerSecond int64 `json:"read_events_per_second,omitempty"`

	// uncommitted journal entries
	UncommittedJournalEntries int64 `json:"uncommitted_journal_entries,omitempty"`
}

// Validate validates this journal summary response
func (m *JournalSummaryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateJournalConfig(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOldestSegment(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JournalSummaryResponse) validateJournalConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.JournalConfig) { // not required
		return nil
	}

	if m.JournalConfig != nil {

		if err := m.JournalConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("journal_config")
			}
			return err
		}
	}

	return nil
}

func (m *JournalSummaryResponse) validateOldestSegment(formats strfmt.Registry) error {

	if swag.IsZero(m.OldestSegment) { // not required
		return nil
	}

	if err := validate.FormatOf("oldest_segment", "body", "date-time", m.OldestSegment.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JournalSummaryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JournalSummaryResponse) UnmarshalBinary(b []byte) error {
	var res JournalSummaryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
