// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IndexRangeSummary index range summary
// swagger:model IndexRangeSummary
type IndexRangeSummary struct {

	// begin
	Begin strfmt.DateTime `json:"begin,omitempty"`

	// calculated at
	CalculatedAt strfmt.DateTime `json:"calculated_at,omitempty"`

	// end
	End strfmt.DateTime `json:"end,omitempty"`

	// index name
	IndexName string `json:"index_name,omitempty"`

	// took ms
	TookMs int64 `json:"took_ms,omitempty"`
}

// Validate validates this index range summary
func (m *IndexRangeSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBegin(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCalculatedAt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEnd(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IndexRangeSummary) validateBegin(formats strfmt.Registry) error {

	if swag.IsZero(m.Begin) { // not required
		return nil
	}

	if err := validate.FormatOf("begin", "body", "date-time", m.Begin.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *IndexRangeSummary) validateCalculatedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.CalculatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("calculated_at", "body", "date-time", m.CalculatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *IndexRangeSummary) validateEnd(formats strfmt.Registry) error {

	if swag.IsZero(m.End) { // not required
		return nil
	}

	if err := validate.FormatOf("end", "body", "date-time", m.End.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IndexRangeSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexRangeSummary) UnmarshalBinary(b []byte) error {
	var res IndexRangeSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
