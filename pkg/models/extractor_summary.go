// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ExtractorSummary extractor summary
// swagger:model ExtractorSummary
type ExtractorSummary struct {

	// condition type
	ConditionType string `json:"condition_type,omitempty"`

	// condition value
	ConditionValue string `json:"condition_value,omitempty"`

	// converter exceptions
	ConverterExceptions int64 `json:"converter_exceptions,omitempty"`

	// converters
	Converters []interface{} `json:"converters"`

	// creator user id
	CreatorUserID string `json:"creator_user_id,omitempty"`

	// cursor strategy
	CursorStrategy string `json:"cursor_strategy,omitempty"`

	// exceptions
	Exceptions int64 `json:"exceptions,omitempty"`

	// extractor config
	ExtractorConfig interface{} `json:"extractor_config,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// metrics
	Metrics *ExtractorSummaryMetrics `json:"metrics,omitempty"`

	// order
	Order int64 `json:"order,omitempty"`

	// source field
	SourceField string `json:"source_field,omitempty"`

	// target field
	TargetField string `json:"target_field,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this extractor summary
func (m *ExtractorSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConverters(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMetrics(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExtractorSummary) validateConverters(formats strfmt.Registry) error {

	if swag.IsZero(m.Converters) { // not required
		return nil
	}

	for i := 0; i < len(m.Converters); i++ {

	}

	return nil
}

func (m *ExtractorSummary) validateMetrics(formats strfmt.Registry) error {

	if swag.IsZero(m.Metrics) { // not required
		return nil
	}

	if m.Metrics != nil {

		if err := m.Metrics.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metrics")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExtractorSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExtractorSummary) UnmarshalBinary(b []byte) error {
	var res ExtractorSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
