// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LdapTestConfigRequest ldap test config request
// swagger:model LdapTestConfigRequest
type LdapTestConfigRequest struct {

	// active directory
	ActiveDirectory bool `json:"active_directory,omitempty"`

	// group id attribute
	GroupIDAttribute string `json:"group_id_attribute,omitempty"`

	// group search base
	GroupSearchBase string `json:"group_search_base,omitempty"`

	// group search pattern
	GroupSearchPattern string `json:"group_search_pattern,omitempty"`

	// ldap uri
	LdapURI string `json:"ldap_uri,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// principal
	Principal string `json:"principal,omitempty"`

	// search base
	SearchBase string `json:"search_base,omitempty"`

	// search pattern
	SearchPattern string `json:"search_pattern,omitempty"`

	// system password
	SystemPassword string `json:"system_password,omitempty"`

	// system username
	SystemUsername string `json:"system_username,omitempty"`

	// test connect only
	TestConnectOnly bool `json:"test_connect_only,omitempty"`

	// trust all certificates
	TrustAllCertificates bool `json:"trust_all_certificates,omitempty"`

	// use start tls
	UseStartTLS bool `json:"use_start_tls,omitempty"`
}

// Validate validates this ldap test config request
func (m *LdapTestConfigRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *LdapTestConfigRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LdapTestConfigRequest) UnmarshalBinary(b []byte) error {
	var res LdapTestConfigRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
