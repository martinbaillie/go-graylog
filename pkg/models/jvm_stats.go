// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// JvmStats jvm stats
// swagger:model JvmStats
type JvmStats struct {

	// boot class path
	BootClassPath string `json:"boot_class_path,omitempty"`

	// class path
	ClassPath string `json:"class_path,omitempty"`

	// garbage collectors
	GarbageCollectors []string `json:"garbage_collectors"`

	// input arguments
	InputArguments []string `json:"input_arguments"`

	// mem
	Mem *JvmStatsMem `json:"mem,omitempty"`

	// memory pools
	MemoryPools []string `json:"memory_pools"`

	// spec name
	SpecName string `json:"spec_name,omitempty"`

	// spec vendor
	SpecVendor string `json:"spec_vendor,omitempty"`

	// spec version
	SpecVersion string `json:"spec_version,omitempty"`

	// start time
	StartTime int64 `json:"start_time,omitempty"`

	// system properties
	SystemProperties interface{} `json:"system_properties,omitempty"`

	// version
	Version string `json:"version,omitempty"`

	// vm name
	VMName string `json:"vm_name,omitempty"`

	// vm vendor
	VMVendor string `json:"vm_vendor,omitempty"`

	// vm version
	VMVersion string `json:"vm_version,omitempty"`
}

// Validate validates this jvm stats
func (m *JvmStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGarbageCollectors(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateInputArguments(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMem(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMemoryPools(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JvmStats) validateGarbageCollectors(formats strfmt.Registry) error {

	if swag.IsZero(m.GarbageCollectors) { // not required
		return nil
	}

	return nil
}

func (m *JvmStats) validateInputArguments(formats strfmt.Registry) error {

	if swag.IsZero(m.InputArguments) { // not required
		return nil
	}

	return nil
}

func (m *JvmStats) validateMem(formats strfmt.Registry) error {

	if swag.IsZero(m.Mem) { // not required
		return nil
	}

	if m.Mem != nil {

		if err := m.Mem.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mem")
			}
			return err
		}
	}

	return nil
}

func (m *JvmStats) validateMemoryPools(formats strfmt.Registry) error {

	if swag.IsZero(m.MemoryPools) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JvmStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JvmStats) UnmarshalBinary(b []byte) error {
	var res JvmStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
