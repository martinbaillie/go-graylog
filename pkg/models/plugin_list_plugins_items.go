// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// PluginListPluginsItems plugin list plugins items
// swagger:model pluginListPluginsItems
type PluginListPluginsItems struct {

	// author
	Author string `json:"author,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// required capabilities
	RequiredCapabilities []string `json:"required_capabilities"`

	// required version
	RequiredVersion string `json:"required_version,omitempty"`

	// unique id
	UniqueID string `json:"unique_id,omitempty"`

	// url
	URL string `json:"url,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this plugin list plugins items
func (m *PluginListPluginsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRequiredCapabilities(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PluginListPluginsItems) validateRequiredCapabilities(formats strfmt.Registry) error {

	if swag.IsZero(m.RequiredCapabilities) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PluginListPluginsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PluginListPluginsItems) UnmarshalBinary(b []byte) error {
	var res PluginListPluginsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
