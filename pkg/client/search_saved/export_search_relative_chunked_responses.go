// Code generated by go-swagger; DO NOT EDIT.

package search_saved

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ExportSearchRelativeChunkedReader is a Reader for the ExportSearchRelativeChunked structure.
type ExportSearchRelativeChunkedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportSearchRelativeChunkedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExportSearchRelativeChunkedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewExportSearchRelativeChunkedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportSearchRelativeChunkedOK creates a ExportSearchRelativeChunkedOK with default headers values
func NewExportSearchRelativeChunkedOK() *ExportSearchRelativeChunkedOK {
	return &ExportSearchRelativeChunkedOK{}
}

/*ExportSearchRelativeChunkedOK handles this case with default header values.

No response was specified
*/
type ExportSearchRelativeChunkedOK struct {
}

func (o *ExportSearchRelativeChunkedOK) Error() string {
	return fmt.Sprintf("[GET /search/universal/relative/export][%d] exportSearchRelativeChunkedOK ", 200)
}

func (o *ExportSearchRelativeChunkedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportSearchRelativeChunkedBadRequest creates a ExportSearchRelativeChunkedBadRequest with default headers values
func NewExportSearchRelativeChunkedBadRequest() *ExportSearchRelativeChunkedBadRequest {
	return &ExportSearchRelativeChunkedBadRequest{}
}

/*ExportSearchRelativeChunkedBadRequest handles this case with default header values.

Invalid timerange parameters provided.
*/
type ExportSearchRelativeChunkedBadRequest struct {
}

func (o *ExportSearchRelativeChunkedBadRequest) Error() string {
	return fmt.Sprintf("[GET /search/universal/relative/export][%d] exportSearchRelativeChunkedBadRequest ", 400)
}

func (o *ExportSearchRelativeChunkedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
