// Code generated by go-swagger; DO NOT EDIT.

package streams_streamid_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddReader is a Reader for the Add structure.
type AddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddOK creates a AddOK with default headers values
func NewAddOK() *AddOK {
	return &AddOK{}
}

/*AddOK handles this case with default header values.

No response was specified
*/
type AddOK struct {
}

func (o *AddOK) Error() string {
	return fmt.Sprintf("[POST /streams/{streamid}/outputs][%d] addOK ", 200)
}

func (o *AddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddBadRequest creates a AddBadRequest with default headers values
func NewAddBadRequest() *AddBadRequest {
	return &AddBadRequest{}
}

/*AddBadRequest handles this case with default header values.

Invalid output specification in input.
*/
type AddBadRequest struct {
}

func (o *AddBadRequest) Error() string {
	return fmt.Sprintf("[POST /streams/{streamid}/outputs][%d] addBadRequest ", 400)
}

func (o *AddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
