// Code generated by go-swagger; DO NOT EDIT.

package system_indices_ranges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRemovePatternParams creates a new RemovePatternParams object
// with the default values initialized.
func NewRemovePatternParams() *RemovePatternParams {
	var ()
	return &RemovePatternParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemovePatternParamsWithTimeout creates a new RemovePatternParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemovePatternParamsWithTimeout(timeout time.Duration) *RemovePatternParams {
	var ()
	return &RemovePatternParams{

		timeout: timeout,
	}
}

// NewRemovePatternParamsWithContext creates a new RemovePatternParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemovePatternParamsWithContext(ctx context.Context) *RemovePatternParams {
	var ()
	return &RemovePatternParams{

		Context: ctx,
	}
}

// NewRemovePatternParamsWithHTTPClient creates a new RemovePatternParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemovePatternParamsWithHTTPClient(client *http.Client) *RemovePatternParams {
	var ()
	return &RemovePatternParams{
		HTTPClient: client,
	}
}

/*RemovePatternParams contains all the parameters to send to the API endpoint
for the remove pattern operation typically these are written to a http.Request
*/
type RemovePatternParams struct {

	/*PatternID*/
	PatternID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove pattern params
func (o *RemovePatternParams) WithTimeout(timeout time.Duration) *RemovePatternParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove pattern params
func (o *RemovePatternParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove pattern params
func (o *RemovePatternParams) WithContext(ctx context.Context) *RemovePatternParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove pattern params
func (o *RemovePatternParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove pattern params
func (o *RemovePatternParams) WithHTTPClient(client *http.Client) *RemovePatternParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove pattern params
func (o *RemovePatternParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPatternID adds the patternID to the remove pattern params
func (o *RemovePatternParams) WithPatternID(patternID string) *RemovePatternParams {
	o.SetPatternID(patternID)
	return o
}

// SetPatternID adds the patternId to the remove pattern params
func (o *RemovePatternParams) SetPatternID(patternID string) {
	o.PatternID = patternID
}

// WriteToRequest writes these params to a swagger request
func (o *RemovePatternParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param patternId
	if err := r.SetPathParam("patternId", o.PatternID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
