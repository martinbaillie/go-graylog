// Code generated by go-swagger; DO NOT EDIT.

package system_indices_ranges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// NewBulkUpdatePatternsParams creates a new BulkUpdatePatternsParams object
// with the default values initialized.
func NewBulkUpdatePatternsParams() *BulkUpdatePatternsParams {
	var (
		replaceDefault = bool(false)
	)
	return &BulkUpdatePatternsParams{
		Replace: &replaceDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewBulkUpdatePatternsParamsWithTimeout creates a new BulkUpdatePatternsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBulkUpdatePatternsParamsWithTimeout(timeout time.Duration) *BulkUpdatePatternsParams {
	var (
		replaceDefault = bool(false)
	)
	return &BulkUpdatePatternsParams{
		Replace: &replaceDefault,

		timeout: timeout,
	}
}

// NewBulkUpdatePatternsParamsWithContext creates a new BulkUpdatePatternsParams object
// with the default values initialized, and the ability to set a context for a request
func NewBulkUpdatePatternsParamsWithContext(ctx context.Context) *BulkUpdatePatternsParams {
	var (
		replaceDefault = bool(false)
	)
	return &BulkUpdatePatternsParams{
		Replace: &replaceDefault,

		Context: ctx,
	}
}

// NewBulkUpdatePatternsParamsWithHTTPClient creates a new BulkUpdatePatternsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBulkUpdatePatternsParamsWithHTTPClient(client *http.Client) *BulkUpdatePatternsParams {
	var (
		replaceDefault = bool(false)
	)
	return &BulkUpdatePatternsParams{
		Replace:    &replaceDefault,
		HTTPClient: client,
	}
}

/*BulkUpdatePatternsParams contains all the parameters to send to the API endpoint
for the bulk update patterns operation typically these are written to a http.Request
*/
type BulkUpdatePatternsParams struct {

	/*Patterns*/
	Patterns *models.GrokPatternList
	/*Replace
	  Replace all patterns with the new ones.

	*/
	Replace *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the bulk update patterns params
func (o *BulkUpdatePatternsParams) WithTimeout(timeout time.Duration) *BulkUpdatePatternsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bulk update patterns params
func (o *BulkUpdatePatternsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bulk update patterns params
func (o *BulkUpdatePatternsParams) WithContext(ctx context.Context) *BulkUpdatePatternsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bulk update patterns params
func (o *BulkUpdatePatternsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bulk update patterns params
func (o *BulkUpdatePatternsParams) WithHTTPClient(client *http.Client) *BulkUpdatePatternsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bulk update patterns params
func (o *BulkUpdatePatternsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPatterns adds the patterns to the bulk update patterns params
func (o *BulkUpdatePatternsParams) WithPatterns(patterns *models.GrokPatternList) *BulkUpdatePatternsParams {
	o.SetPatterns(patterns)
	return o
}

// SetPatterns adds the patterns to the bulk update patterns params
func (o *BulkUpdatePatternsParams) SetPatterns(patterns *models.GrokPatternList) {
	o.Patterns = patterns
}

// WithReplace adds the replace to the bulk update patterns params
func (o *BulkUpdatePatternsParams) WithReplace(replace *bool) *BulkUpdatePatternsParams {
	o.SetReplace(replace)
	return o
}

// SetReplace adds the replace to the bulk update patterns params
func (o *BulkUpdatePatternsParams) SetReplace(replace *bool) {
	o.Replace = replace
}

// WriteToRequest writes these params to a swagger request
func (o *BulkUpdatePatternsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Patterns != nil {
		if err := r.SetBodyParam(o.Patterns); err != nil {
			return err
		}
	}

	if o.Replace != nil {

		// query param replace
		var qrReplace bool
		if o.Replace != nil {
			qrReplace = *o.Replace
		}
		qReplace := swag.FormatBool(qrReplace)
		if qReplace != "" {
			if err := r.SetQueryParam("replace", qReplace); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
