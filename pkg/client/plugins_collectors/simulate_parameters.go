// Code generated by go-swagger; DO NOT EDIT.

package plugins_collectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// NewSimulateParams creates a new SimulateParams object
// with the default values initialized.
func NewSimulateParams() *SimulateParams {
	var ()
	return &SimulateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSimulateParamsWithTimeout creates a new SimulateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSimulateParamsWithTimeout(timeout time.Duration) *SimulateParams {
	var ()
	return &SimulateParams{

		timeout: timeout,
	}
}

// NewSimulateParamsWithContext creates a new SimulateParams object
// with the default values initialized, and the ability to set a context for a request
func NewSimulateParamsWithContext(ctx context.Context) *SimulateParams {
	var ()
	return &SimulateParams{

		Context: ctx,
	}
}

// NewSimulateParamsWithHTTPClient creates a new SimulateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSimulateParamsWithHTTPClient(client *http.Client) *SimulateParams {
	var ()
	return &SimulateParams{
		HTTPClient: client,
	}
}

/*SimulateParams contains all the parameters to send to the API endpoint
for the simulate operation typically these are written to a http.Request
*/
type SimulateParams struct {

	/*Simulation*/
	Simulation *models.SimulationRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the simulate params
func (o *SimulateParams) WithTimeout(timeout time.Duration) *SimulateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the simulate params
func (o *SimulateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the simulate params
func (o *SimulateParams) WithContext(ctx context.Context) *SimulateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the simulate params
func (o *SimulateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the simulate params
func (o *SimulateParams) WithHTTPClient(client *http.Client) *SimulateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the simulate params
func (o *SimulateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSimulation adds the simulation to the simulate params
func (o *SimulateParams) WithSimulation(simulation *models.SimulationRequest) *SimulateParams {
	o.SetSimulation(simulation)
	return o
}

// SetSimulation adds the simulation to the simulate params
func (o *SimulateParams) SetSimulation(simulation *models.SimulationRequest) {
	o.Simulation = simulation
}

// WriteToRequest writes these params to a swagger request
func (o *SimulateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Simulation != nil {
		if err := r.SetBodyParam(o.Simulation); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
