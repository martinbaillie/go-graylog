// Code generated by go-swagger; DO NOT EDIT.

package system_indexer_overview

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CloseReader is a Reader for the Close structure.
type CloseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCloseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewCloseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCloseOK creates a CloseOK with default headers values
func NewCloseOK() *CloseOK {
	return &CloseOK{}
}

/*CloseOK handles this case with default header values.

No response was specified
*/
type CloseOK struct {
}

func (o *CloseOK) Error() string {
	return fmt.Sprintf("[POST /system/indexer/indices/{index}/close][%d] closeOK ", 200)
}

func (o *CloseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCloseForbidden creates a CloseForbidden with default headers values
func NewCloseForbidden() *CloseForbidden {
	return &CloseForbidden{}
}

/*CloseForbidden handles this case with default header values.

You cannot close the current deflector target index.
*/
type CloseForbidden struct {
}

func (o *CloseForbidden) Error() string {
	return fmt.Sprintf("[POST /system/indexer/indices/{index}/close][%d] closeForbidden ", 403)
}

func (o *CloseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
