// Code generated by go-swagger; DO NOT EDIT.

package system_debug_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// GetRelevantReader is a Reader for the GetRelevant structure.
type GetRelevantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRelevantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRelevantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRelevantOK creates a GetRelevantOK with default headers values
func NewGetRelevantOK() *GetRelevantOK {
	return &GetRelevantOK{}
}

/*GetRelevantOK handles this case with default header values.

No response was specified
*/
type GetRelevantOK struct {
	Payload *models.ExposedConfiguration
}

func (o *GetRelevantOK) Error() string {
	return fmt.Sprintf("[GET /system/configuration][%d] getRelevantOK  %+v", 200, o.Payload)
}

func (o *GetRelevantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExposedConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
