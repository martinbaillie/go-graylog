// Code generated by go-swagger; DO NOT EDIT.

package system_outputs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteNotificationReader is a Reader for the DeleteNotification structure.
type DeleteNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteNotificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteNotificationOK creates a DeleteNotificationOK with default headers values
func NewDeleteNotificationOK() *DeleteNotificationOK {
	return &DeleteNotificationOK{}
}

/*DeleteNotificationOK handles this case with default header values.

No response was specified
*/
type DeleteNotificationOK struct {
}

func (o *DeleteNotificationOK) Error() string {
	return fmt.Sprintf("[DELETE /system/notifications/{notificationType}][%d] deleteNotificationOK ", 200)
}

func (o *DeleteNotificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNotificationNotFound creates a DeleteNotificationNotFound with default headers values
func NewDeleteNotificationNotFound() *DeleteNotificationNotFound {
	return &DeleteNotificationNotFound{}
}

/*DeleteNotificationNotFound handles this case with default header values.

No such notification type.
*/
type DeleteNotificationNotFound struct {
}

func (o *DeleteNotificationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /system/notifications/{notificationType}][%d] deleteNotificationNotFound ", 404)
}

func (o *DeleteNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
