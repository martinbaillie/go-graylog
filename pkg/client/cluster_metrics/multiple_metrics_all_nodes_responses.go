// Code generated by go-swagger; DO NOT EDIT.

package cluster_metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// MultipleMetricsAllNodesReader is a Reader for the MultipleMetricsAllNodes structure.
type MultipleMetricsAllNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MultipleMetricsAllNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMultipleMetricsAllNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewMultipleMetricsAllNodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMultipleMetricsAllNodesOK creates a MultipleMetricsAllNodesOK with default headers values
func NewMultipleMetricsAllNodesOK() *MultipleMetricsAllNodesOK {
	return &MultipleMetricsAllNodesOK{}
}

/*MultipleMetricsAllNodesOK handles this case with default header values.

No response was specified
*/
type MultipleMetricsAllNodesOK struct {
	Payload MultipleMetricsAllNodesOKBody
}

func (o *MultipleMetricsAllNodesOK) Error() string {
	return fmt.Sprintf("[POST /cluster/metrics/multiple][%d] multipleMetricsAllNodesOK  %+v", 200, o.Payload)
}

func (o *MultipleMetricsAllNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultipleMetricsAllNodesBadRequest creates a MultipleMetricsAllNodesBadRequest with default headers values
func NewMultipleMetricsAllNodesBadRequest() *MultipleMetricsAllNodesBadRequest {
	return &MultipleMetricsAllNodesBadRequest{}
}

/*MultipleMetricsAllNodesBadRequest handles this case with default header values.

Malformed body
*/
type MultipleMetricsAllNodesBadRequest struct {
}

func (o *MultipleMetricsAllNodesBadRequest) Error() string {
	return fmt.Sprintf("[POST /cluster/metrics/multiple][%d] multipleMetricsAllNodesBadRequest ", 400)
}

func (o *MultipleMetricsAllNodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*MultipleMetricsAllNodesOKBody multiple metrics all nodes o k body
swagger:model MultipleMetricsAllNodesOKBody
*/
type MultipleMetricsAllNodesOKBody interface{}
