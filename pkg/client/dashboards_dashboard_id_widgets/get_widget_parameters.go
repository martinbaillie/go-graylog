// Code generated by go-swagger; DO NOT EDIT.

package dashboards_dashboard_id_widgets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetWidgetParams creates a new GetWidgetParams object
// with the default values initialized.
func NewGetWidgetParams() *GetWidgetParams {
	var ()
	return &GetWidgetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWidgetParamsWithTimeout creates a new GetWidgetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWidgetParamsWithTimeout(timeout time.Duration) *GetWidgetParams {
	var ()
	return &GetWidgetParams{

		timeout: timeout,
	}
}

// NewGetWidgetParamsWithContext creates a new GetWidgetParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWidgetParamsWithContext(ctx context.Context) *GetWidgetParams {
	var ()
	return &GetWidgetParams{

		Context: ctx,
	}
}

// NewGetWidgetParamsWithHTTPClient creates a new GetWidgetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWidgetParamsWithHTTPClient(client *http.Client) *GetWidgetParams {
	var ()
	return &GetWidgetParams{
		HTTPClient: client,
	}
}

/*GetWidgetParams contains all the parameters to send to the API endpoint
for the get widget operation typically these are written to a http.Request
*/
type GetWidgetParams struct {

	/*DashboardID*/
	DashboardID string
	/*WidgetID*/
	WidgetID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get widget params
func (o *GetWidgetParams) WithTimeout(timeout time.Duration) *GetWidgetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get widget params
func (o *GetWidgetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get widget params
func (o *GetWidgetParams) WithContext(ctx context.Context) *GetWidgetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get widget params
func (o *GetWidgetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get widget params
func (o *GetWidgetParams) WithHTTPClient(client *http.Client) *GetWidgetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get widget params
func (o *GetWidgetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDashboardID adds the dashboardID to the get widget params
func (o *GetWidgetParams) WithDashboardID(dashboardID string) *GetWidgetParams {
	o.SetDashboardID(dashboardID)
	return o
}

// SetDashboardID adds the dashboardId to the get widget params
func (o *GetWidgetParams) SetDashboardID(dashboardID string) {
	o.DashboardID = dashboardID
}

// WithWidgetID adds the widgetID to the get widget params
func (o *GetWidgetParams) WithWidgetID(widgetID string) *GetWidgetParams {
	o.SetWidgetID(widgetID)
	return o
}

// SetWidgetID adds the widgetId to the get widget params
func (o *GetWidgetParams) SetWidgetID(widgetID string) {
	o.WidgetID = widgetID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWidgetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param dashboardId
	if err := r.SetPathParam("dashboardId", o.DashboardID); err != nil {
		return err
	}

	// path param widgetId
	if err := r.SetPathParam("widgetId", o.WidgetID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
