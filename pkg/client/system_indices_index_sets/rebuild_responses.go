// Code generated by go-swagger; DO NOT EDIT.

package system_indices_index_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RebuildReader is a Reader for the Rebuild structure.
type RebuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RebuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRebuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewRebuildAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRebuildOK creates a RebuildOK with default headers values
func NewRebuildOK() *RebuildOK {
	return &RebuildOK{}
}

/*RebuildOK handles this case with default header values.

No response was specified
*/
type RebuildOK struct {
}

func (o *RebuildOK) Error() string {
	return fmt.Sprintf("[POST /system/indices/ranges/rebuild][%d] rebuildOK ", 200)
}

func (o *RebuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRebuildAccepted creates a RebuildAccepted with default headers values
func NewRebuildAccepted() *RebuildAccepted {
	return &RebuildAccepted{}
}

/*RebuildAccepted handles this case with default header values.

Rebuild/sync systemjob triggered.
*/
type RebuildAccepted struct {
}

func (o *RebuildAccepted) Error() string {
	return fmt.Sprintf("[POST /system/indices/ranges/rebuild][%d] rebuildAccepted ", 202)
}

func (o *RebuildAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
