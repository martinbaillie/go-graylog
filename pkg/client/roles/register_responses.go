// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RegisterReader is a Reader for the Register structure.
type RegisterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRegisterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRegisterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegisterOK creates a RegisterOK with default headers values
func NewRegisterOK() *RegisterOK {
	return &RegisterOK{}
}

/*RegisterOK handles this case with default header values.

No response was specified
*/
type RegisterOK struct {
}

func (o *RegisterOK) Error() string {
	return fmt.Sprintf("[PUT /plugins/org.graylog.plugins.collector/collectors/{collectorId}][%d] registerOK ", 200)
}

func (o *RegisterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterBadRequest creates a RegisterBadRequest with default headers values
func NewRegisterBadRequest() *RegisterBadRequest {
	return &RegisterBadRequest{}
}

/*RegisterBadRequest handles this case with default header values.

The supplied request is not valid.
*/
type RegisterBadRequest struct {
}

func (o *RegisterBadRequest) Error() string {
	return fmt.Sprintf("[PUT /plugins/org.graylog.plugins.collector/collectors/{collectorId}][%d] registerBadRequest ", 400)
}

func (o *RegisterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
