// Code generated by go-swagger; DO NOT EDIT.

package streams_streamid_outputs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// ListPaginatedReader is a Reader for the ListPaginated structure.
type ListPaginatedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPaginatedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListPaginatedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListPaginatedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListPaginatedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListPaginatedOK creates a ListPaginatedOK with default headers values
func NewListPaginatedOK() *ListPaginatedOK {
	return &ListPaginatedOK{}
}

/*ListPaginatedOK handles this case with default header values.

No response was specified
*/
type ListPaginatedOK struct {
	Payload *models.AlertListSummary
}

func (o *ListPaginatedOK) Error() string {
	return fmt.Sprintf("[GET /streams/{streamId}/alerts/paginated][%d] listPaginatedOK  %+v", 200, o.Payload)
}

func (o *ListPaginatedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertListSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPaginatedBadRequest creates a ListPaginatedBadRequest with default headers values
func NewListPaginatedBadRequest() *ListPaginatedBadRequest {
	return &ListPaginatedBadRequest{}
}

/*ListPaginatedBadRequest handles this case with default header values.

Invalid ObjectId.
*/
type ListPaginatedBadRequest struct {
}

func (o *ListPaginatedBadRequest) Error() string {
	return fmt.Sprintf("[GET /streams/{streamId}/alerts/paginated][%d] listPaginatedBadRequest ", 400)
}

func (o *ListPaginatedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPaginatedNotFound creates a ListPaginatedNotFound with default headers values
func NewListPaginatedNotFound() *ListPaginatedNotFound {
	return &ListPaginatedNotFound{}
}

/*ListPaginatedNotFound handles this case with default header values.

Stream not found.
*/
type ListPaginatedNotFound struct {
}

func (o *ListPaginatedNotFound) Error() string {
	return fmt.Sprintf("[GET /streams/{streamId}/alerts/paginated][%d] listPaginatedNotFound ", 404)
}

func (o *ListPaginatedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
