// Code generated by go-swagger; DO NOT EDIT.

package system_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// ExportBundleReader is a Reader for the ExportBundle structure.
type ExportBundleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportBundleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExportBundleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewExportBundleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportBundleOK creates a ExportBundleOK with default headers values
func NewExportBundleOK() *ExportBundleOK {
	return &ExportBundleOK{}
}

/*ExportBundleOK handles this case with default header values.

No response was specified
*/
type ExportBundleOK struct {
	Payload *models.ConfigurationBundle
}

func (o *ExportBundleOK) Error() string {
	return fmt.Sprintf("[POST /system/bundles/export][%d] exportBundleOK  %+v", 200, o.Payload)
}

func (o *ExportBundleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigurationBundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportBundleInternalServerError creates a ExportBundleInternalServerError with default headers values
func NewExportBundleInternalServerError() *ExportBundleInternalServerError {
	return &ExportBundleInternalServerError{}
}

/*ExportBundleInternalServerError handles this case with default header values.

Error while exporting content pack
*/
type ExportBundleInternalServerError struct {
}

func (o *ExportBundleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /system/bundles/export][%d] exportBundleInternalServerError ", 500)
}

func (o *ExportBundleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
