// Code generated by go-swagger; DO NOT EDIT.

package system_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// ShowBundleReader is a Reader for the ShowBundle structure.
type ShowBundleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowBundleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShowBundleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewShowBundleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewShowBundleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShowBundleOK creates a ShowBundleOK with default headers values
func NewShowBundleOK() *ShowBundleOK {
	return &ShowBundleOK{}
}

/*ShowBundleOK handles this case with default header values.

No response was specified
*/
type ShowBundleOK struct {
	Payload *models.ConfigurationBundle
}

func (o *ShowBundleOK) Error() string {
	return fmt.Sprintf("[GET /system/bundles/{bundleId}][%d] showBundleOK  %+v", 200, o.Payload)
}

func (o *ShowBundleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigurationBundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowBundleNotFound creates a ShowBundleNotFound with default headers values
func NewShowBundleNotFound() *ShowBundleNotFound {
	return &ShowBundleNotFound{}
}

/*ShowBundleNotFound handles this case with default header values.

Missing or invalid content pack
*/
type ShowBundleNotFound struct {
}

func (o *ShowBundleNotFound) Error() string {
	return fmt.Sprintf("[GET /system/bundles/{bundleId}][%d] showBundleNotFound ", 404)
}

func (o *ShowBundleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShowBundleInternalServerError creates a ShowBundleInternalServerError with default headers values
func NewShowBundleInternalServerError() *ShowBundleInternalServerError {
	return &ShowBundleInternalServerError{}
}

/*ShowBundleInternalServerError handles this case with default header values.

Error while loading content pack
*/
type ShowBundleInternalServerError struct {
}

func (o *ShowBundleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/bundles/{bundleId}][%d] showBundleInternalServerError ", 500)
}

func (o *ShowBundleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
