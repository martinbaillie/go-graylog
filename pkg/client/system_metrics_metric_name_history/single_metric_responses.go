// Code generated by go-swagger; DO NOT EDIT.

package system_metrics_metric_name_history

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SingleMetricReader is a Reader for the SingleMetric structure.
type SingleMetricReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SingleMetricReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSingleMetricOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewSingleMetricNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSingleMetricOK creates a SingleMetricOK with default headers values
func NewSingleMetricOK() *SingleMetricOK {
	return &SingleMetricOK{}
}

/*SingleMetricOK handles this case with default header values.

No response was specified
*/
type SingleMetricOK struct {
	Payload SingleMetricOKBody
}

func (o *SingleMetricOK) Error() string {
	return fmt.Sprintf("[GET /system/metrics/{metricName}][%d] singleMetricOK  %+v", 200, o.Payload)
}

func (o *SingleMetricOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSingleMetricNotFound creates a SingleMetricNotFound with default headers values
func NewSingleMetricNotFound() *SingleMetricNotFound {
	return &SingleMetricNotFound{}
}

/*SingleMetricNotFound handles this case with default header values.

No such metric
*/
type SingleMetricNotFound struct {
}

func (o *SingleMetricNotFound) Error() string {
	return fmt.Sprintf("[GET /system/metrics/{metricName}][%d] singleMetricNotFound ", 404)
}

func (o *SingleMetricNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*SingleMetricOKBody single metric o k body
swagger:model SingleMetricOKBody
*/
type SingleMetricOKBody interface{}
