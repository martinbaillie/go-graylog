// Code generated by go-swagger; DO NOT EDIT.

package system_inputs_input_id_extractors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// UpdateReader is a Reader for the Update structure.
type UpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateOK creates a UpdateOK with default headers values
func NewUpdateOK() *UpdateOK {
	return &UpdateOK{}
}

/*UpdateOK handles this case with default header values.

No response was specified
*/
type UpdateOK struct {
	Payload *models.ExtractorSummary
}

func (o *UpdateOK) Error() string {
	return fmt.Sprintf("[PUT /system/inputs/{inputId}/extractors/{extractorId}][%d] updateOK  %+v", 200, o.Payload)
}

func (o *UpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExtractorSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBadRequest creates a UpdateBadRequest with default headers values
func NewUpdateBadRequest() *UpdateBadRequest {
	return &UpdateBadRequest{}
}

/*UpdateBadRequest handles this case with default header values.

Missing or invalid configuration.
*/
type UpdateBadRequest struct {
}

func (o *UpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /system/inputs/{inputId}/extractors/{extractorId}][%d] updateBadRequest ", 400)
}

func (o *UpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNotFound creates a UpdateNotFound with default headers values
func NewUpdateNotFound() *UpdateNotFound {
	return &UpdateNotFound{}
}

/*UpdateNotFound handles this case with default header values.

No such extractor on this input.
*/
type UpdateNotFound struct {
}

func (o *UpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /system/inputs/{inputId}/extractors/{extractorId}][%d] updateNotFound ", 404)
}

func (o *UpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
