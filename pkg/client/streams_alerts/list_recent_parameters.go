// Code generated by go-swagger; DO NOT EDIT.

package streams_alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListRecentParams creates a new ListRecentParams object
// with the default values initialized.
func NewListRecentParams() *ListRecentParams {
	var (
		limitDefault = int64(300)
		sinceDefault = int64(0)
	)
	return &ListRecentParams{
		Limit: &limitDefault,
		Since: &sinceDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewListRecentParamsWithTimeout creates a new ListRecentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListRecentParamsWithTimeout(timeout time.Duration) *ListRecentParams {
	var (
		limitDefault = int64(300)
		sinceDefault = int64(0)
	)
	return &ListRecentParams{
		Limit: &limitDefault,
		Since: &sinceDefault,

		timeout: timeout,
	}
}

// NewListRecentParamsWithContext creates a new ListRecentParams object
// with the default values initialized, and the ability to set a context for a request
func NewListRecentParamsWithContext(ctx context.Context) *ListRecentParams {
	var (
		limitDefault = int64(300)
		sinceDefault = int64(0)
	)
	return &ListRecentParams{
		Limit: &limitDefault,
		Since: &sinceDefault,

		Context: ctx,
	}
}

// NewListRecentParamsWithHTTPClient creates a new ListRecentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListRecentParamsWithHTTPClient(client *http.Client) *ListRecentParams {
	var (
		limitDefault = int64(300)
		sinceDefault = int64(0)
	)
	return &ListRecentParams{
		Limit:      &limitDefault,
		Since:      &sinceDefault,
		HTTPClient: client,
	}
}

/*ListRecentParams contains all the parameters to send to the API endpoint
for the list recent operation typically these are written to a http.Request
*/
type ListRecentParams struct {

	/*Limit
	  Maximum number of alerts to return.

	*/
	Limit *int64
	/*Since
	  Optional parameter to define a lower date boundary. (UNIX timestamp)

	*/
	Since *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list recent params
func (o *ListRecentParams) WithTimeout(timeout time.Duration) *ListRecentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list recent params
func (o *ListRecentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list recent params
func (o *ListRecentParams) WithContext(ctx context.Context) *ListRecentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list recent params
func (o *ListRecentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list recent params
func (o *ListRecentParams) WithHTTPClient(client *http.Client) *ListRecentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list recent params
func (o *ListRecentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the list recent params
func (o *ListRecentParams) WithLimit(limit *int64) *ListRecentParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list recent params
func (o *ListRecentParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithSince adds the since to the list recent params
func (o *ListRecentParams) WithSince(since *int64) *ListRecentParams {
	o.SetSince(since)
	return o
}

// SetSince adds the since to the list recent params
func (o *ListRecentParams) SetSince(since *int64) {
	o.Since = since
}

// WriteToRequest writes these params to a swagger request
func (o *ListRecentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Since != nil {

		// query param since
		var qrSince int64
		if o.Since != nil {
			qrSince = *o.Since
		}
		qSince := swag.FormatInt64(qrSince)
		if qSince != "" {
			if err := r.SetQueryParam("since", qSince); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
