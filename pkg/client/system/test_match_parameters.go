// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewTestMatchParams creates a new TestMatchParams object
// with the default values initialized.
func NewTestMatchParams() *TestMatchParams {
	var ()
	return &TestMatchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTestMatchParamsWithTimeout creates a new TestMatchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTestMatchParamsWithTimeout(timeout time.Duration) *TestMatchParams {
	var ()
	return &TestMatchParams{

		timeout: timeout,
	}
}

// NewTestMatchParamsWithContext creates a new TestMatchParams object
// with the default values initialized, and the ability to set a context for a request
func NewTestMatchParamsWithContext(ctx context.Context) *TestMatchParams {
	var ()
	return &TestMatchParams{

		Context: ctx,
	}
}

// NewTestMatchParamsWithHTTPClient creates a new TestMatchParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTestMatchParamsWithHTTPClient(client *http.Client) *TestMatchParams {
	var ()
	return &TestMatchParams{
		HTTPClient: client,
	}
}

/*TestMatchParams contains all the parameters to send to the API endpoint
for the test match operation typically these are written to a http.Request
*/
type TestMatchParams struct {

	/*JSONBody*/
	JSONBody interface{}
	/*StreamID*/
	StreamID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the test match params
func (o *TestMatchParams) WithTimeout(timeout time.Duration) *TestMatchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the test match params
func (o *TestMatchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the test match params
func (o *TestMatchParams) WithContext(ctx context.Context) *TestMatchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the test match params
func (o *TestMatchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the test match params
func (o *TestMatchParams) WithHTTPClient(client *http.Client) *TestMatchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the test match params
func (o *TestMatchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithJSONBody adds the jSONBody to the test match params
func (o *TestMatchParams) WithJSONBody(jSONBody interface{}) *TestMatchParams {
	o.SetJSONBody(jSONBody)
	return o
}

// SetJSONBody adds the jsonBody to the test match params
func (o *TestMatchParams) SetJSONBody(jSONBody interface{}) {
	o.JSONBody = jSONBody
}

// WithStreamID adds the streamID to the test match params
func (o *TestMatchParams) WithStreamID(streamID string) *TestMatchParams {
	o.SetStreamID(streamID)
	return o
}

// SetStreamID adds the streamId to the test match params
func (o *TestMatchParams) SetStreamID(streamID string) {
	o.StreamID = streamID
}

// WriteToRequest writes these params to a swagger request
func (o *TestMatchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.JSONBody != nil {
		if err := r.SetBodyParam(o.JSONBody); err != nil {
			return err
		}
	}

	// path param streamId
	if err := r.SetPathParam("streamId", o.StreamID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
