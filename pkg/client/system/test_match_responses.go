// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/martinbaillie/go-graylog/pkg/models"
)

// TestMatchReader is a Reader for the TestMatch structure.
type TestMatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestMatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTestMatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTestMatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTestMatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestMatchOK creates a TestMatchOK with default headers values
func NewTestMatchOK() *TestMatchOK {
	return &TestMatchOK{}
}

/*TestMatchOK handles this case with default header values.

No response was specified
*/
type TestMatchOK struct {
	Payload *models.TestMatchResponse
}

func (o *TestMatchOK) Error() string {
	return fmt.Sprintf("[POST /streams/{streamId}/testMatch][%d] testMatchOK  %+v", 200, o.Payload)
}

func (o *TestMatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestMatchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestMatchBadRequest creates a TestMatchBadRequest with default headers values
func NewTestMatchBadRequest() *TestMatchBadRequest {
	return &TestMatchBadRequest{}
}

/*TestMatchBadRequest handles this case with default header values.

Invalid or missing Stream id.
*/
type TestMatchBadRequest struct {
}

func (o *TestMatchBadRequest) Error() string {
	return fmt.Sprintf("[POST /streams/{streamId}/testMatch][%d] testMatchBadRequest ", 400)
}

func (o *TestMatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestMatchNotFound creates a TestMatchNotFound with default headers values
func NewTestMatchNotFound() *TestMatchNotFound {
	return &TestMatchNotFound{}
}

/*TestMatchNotFound handles this case with default header values.

Stream not found.
*/
type TestMatchNotFound struct {
}

func (o *TestMatchNotFound) Error() string {
	return fmt.Sprintf("[POST /streams/{streamId}/testMatch][%d] testMatchNotFound ", 404)
}

func (o *TestMatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
