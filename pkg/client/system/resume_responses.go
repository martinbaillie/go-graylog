// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ResumeReader is a Reader for the Resume structure.
type ResumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewResumeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewResumeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewResumeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResumeOK creates a ResumeOK with default headers values
func NewResumeOK() *ResumeOK {
	return &ResumeOK{}
}

/*ResumeOK handles this case with default header values.

No response was specified
*/
type ResumeOK struct {
}

func (o *ResumeOK) Error() string {
	return fmt.Sprintf("[POST /streams/{streamId}/resume][%d] resumeOK ", 200)
}

func (o *ResumeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeBadRequest creates a ResumeBadRequest with default headers values
func NewResumeBadRequest() *ResumeBadRequest {
	return &ResumeBadRequest{}
}

/*ResumeBadRequest handles this case with default header values.

Invalid or missing Stream id.
*/
type ResumeBadRequest struct {
}

func (o *ResumeBadRequest) Error() string {
	return fmt.Sprintf("[POST /streams/{streamId}/resume][%d] resumeBadRequest ", 400)
}

func (o *ResumeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeNotFound creates a ResumeNotFound with default headers values
func NewResumeNotFound() *ResumeNotFound {
	return &ResumeNotFound{}
}

/*ResumeNotFound handles this case with default header values.

Stream not found.
*/
type ResumeNotFound struct {
}

func (o *ResumeNotFound) Error() string {
	return fmt.Sprintf("[POST /streams/{streamId}/resume][%d] resumeNotFound ", 404)
}

func (o *ResumeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
