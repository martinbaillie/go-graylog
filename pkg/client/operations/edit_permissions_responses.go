// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// EditPermissionsReader is a Reader for the EditPermissions structure.
type EditPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEditPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEditPermissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEditPermissionsOK creates a EditPermissionsOK with default headers values
func NewEditPermissionsOK() *EditPermissionsOK {
	return &EditPermissionsOK{}
}

/*EditPermissionsOK handles this case with default header values.

No response was specified
*/
type EditPermissionsOK struct {
}

func (o *EditPermissionsOK) Error() string {
	return fmt.Sprintf("[PUT /users/{username}/permissions][%d] editPermissionsOK ", 200)
}

func (o *EditPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditPermissionsBadRequest creates a EditPermissionsBadRequest with default headers values
func NewEditPermissionsBadRequest() *EditPermissionsBadRequest {
	return &EditPermissionsBadRequest{}
}

/*EditPermissionsBadRequest handles this case with default header values.

Missing or invalid permission data.
*/
type EditPermissionsBadRequest struct {
}

func (o *EditPermissionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/{username}/permissions][%d] editPermissionsBadRequest ", 400)
}

func (o *EditPermissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
