swagger: '2.0'
info:
  title: '127.0.0.1:9000'
  version: 2.4.3+2c41897
host: '127.0.0.1:9000'
basePath: /api
schemes:
  - http
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
paths:
  /alerts/callbacks:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlarmCallbackListSummary'
      tags:
        - alerts/callbacks
      operationId: all
      summary: Get a list of all alarm callbacks
  /alerts/callbacks/types:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AvailableAlarmCallbacksResponse'
      tags:
        - alerts/callbacks
      operationId: available
      summary: Get a list of all alarm callbacks types
  '/alerts/callbacks/{alarmCallbackId}/test':
    post:
      produces:
        - application/json
      parameters:
        - description: The alarm callback id to send a test alert for.
          in: path
          name: alarmCallbackId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Alarm callback not found.
        '500':
          description: Error while testing alarm callback
      tags:
        - alerts/callbacks
      operationId: test
      summary: Send a test alert for a given alarm callback
  /alerts/conditions:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertConditionListSummary'
      tags:
        - alerts/conditions
      operationId: all
      summary: Get a list of all alert conditions
  /alerts/conditions/types:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - alerts/conditions
      operationId: available
      summary: Get a list of all alert condition types
  /api-docs:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
      tags:
        - api-docs
      operationId: overview
      summary: Get API documentation
  '/api-docs/{route: .+}':
    get:
      produces:
        - application/json
      parameters:
        - description: Route to fetch. For example /system
          in: path
          name: route
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - api-docs
      operationId: route
      summary: Get detailed API documentation of a single resource
  /cluster:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - cluster
      operationId: get
      summary: Get system overview of all Graylog nodes
  /cluster/deflector/cycle:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
      tags:
        - cluster/deflector
      operationId: cycle
      summary: Finds master node and triggers deflector cycle
  '/cluster/deflector/{indexSetId}/cycle':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - cluster/deflector
      operationId: cycle
      summary: Finds master node and triggers deflector cycle
  /cluster/inputstates:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - cluster/inputstates
      operationId: get
      summary: Get all input states
  '/cluster/inputstates/{inputId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '404':
          description: No such input.
      tags:
        - cluster/inputstates
      operationId: stop
      summary: Stop specified input in all nodes
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '404':
          description: No such input.
      tags:
        - cluster/inputstates
      operationId: start
      summary: Start or restart specified input in all nodes
  /cluster/jobs:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - cluster/jobs
      operationId: list
      summary: List currently running jobs
  '/cluster/jobs/{jobId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: jobId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemJobSummary'
      tags:
        - cluster/jobs
      operationId: cancelJob
      summary: Cancel job with the given ID
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: jobId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemJobSummary'
      tags:
        - cluster/jobs
      operationId: getJob
      summary: Get job with the given ID
  /cluster/metrics/multiple:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: Requested metrics
          required: true
          schema:
            $ref: '#/definitions/MetricsReadRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '400':
          description: Malformed body
      tags:
        - cluster/metrics
      operationId: multipleMetricsAllNodes
      summary: Get all metrics of all nodes in the cluster
  /cluster/system/loggers:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - cluster/system/loggers
      operationId: loggers
      summary: List all loggers of all nodes and their current levels
  /cluster/system/loggers/subsystems:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - cluster/system/loggers
      operationId: subsystems
      summary: List all logger subsystems and their current levels
  '/cluster/system/loggers/{nodeId}/subsystems/{subsystem}/level/{level}':
    put:
      parameters:
        - in: path
          name: nodeId
          required: true
          type: string
        - in: path
          name: subsystem
          required: true
          type: string
        - in: path
          name: level
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such subsystem.
      tags:
        - cluster/system/loggers
      description: Provided level is falling back to DEBUG if it does not exist
      operationId: setSubsystemLoggerLevel
      summary: Set the loglevel of a whole subsystem
  '/cluster/{nodeId}/journal':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the node to get message journal information.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/JournalSummaryResponse'
      tags:
        - 'cluster/{nodeId}/journal'
      operationId: get
      summary: Get message journal information of a given node
  '/cluster/{nodeId}/jvm':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the node where processing will be paused.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemJVMResponse'
      tags:
        - cluster
      operationId: jvm
      summary: Get JVM information of the given node
  '/cluster/{nodeId}/lbstatus/override/{status}':
    put:
      produces:
        - application/json
      parameters:
        - description: The id of the node whose LB status will be changed
          in: path
          name: nodeId
          required: true
          type: string
        - in: path
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - 'cluster/{nodeId}/lbstatus'
      operationId: override
      summary: 'Override load balancer status of this graylog-server node. Next lifecycle change will override it again to its default. Set to ALIVE, DEAD, or THROTTLED.'
  '/cluster/{nodeId}/metrics/multiple':
    post:
      produces:
        - application/json
      parameters:
        - description: The id of the node whose metrics we want.
          in: path
          name: nodeId
          required: true
          type: string
        - in: body
          name: Requested metrics
          required: true
          schema:
            $ref: '#/definitions/MetricsReadRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetricsSummaryResponse'
        '400':
          description: Malformed body
      tags:
        - 'cluster/{nodeId}/metrics'
      operationId: multipleMetrics
      summary: Get the values of multiple metrics at once from node
  '/cluster/{nodeId}/metrics/names':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the node whose metrics we want.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetricNamesResponse'
      tags:
        - 'cluster/{nodeId}/metrics'
      operationId: metricNames
      summary: Get all metrics keys/names from node
  '/cluster/{nodeId}/metrics/namespace/{namespace}':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the node whose metrics we want.
          in: path
          name: nodeId
          required: true
          type: string
        - in: path
          name: namespace
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetricsSummaryResponse'
        '404':
          description: No such metric namespace
      tags:
        - 'cluster/{nodeId}/metrics'
      operationId: byNamespace
      summary: Get all metrics of a namespace from node
  '/cluster/{nodeId}/plugins':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the node where processing will be paused.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PluginList'
      tags:
        - 'cluster/{nodeId}/plugins'
      operationId: list
      summary: List all installed plugins on the given node
  '/cluster/{nodeId}/processing/pause':
    post:
      produces:
        - application/json
      parameters:
        - description: The id of the node where processing will be paused.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - 'cluster/{nodeId}/processing'
      description: 'If the message journal is enabled, incoming messages will be spooled on disk, if it is disabled, you might lose messages from inputs which cannot buffer themselves, like AMQP or Kafka-based inputs.'
      operationId: pause
      summary: Pause message processing on node
  '/cluster/{nodeId}/processing/resume':
    post:
      produces:
        - application/json
      parameters:
        - description: The id of the node where processing will be resumed.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - 'cluster/{nodeId}/processing'
      operationId: resume
      summary: Resume message processing on node
  '/cluster/{nodeId}/shutdown':
    post:
      produces:
        - application/json
      parameters:
        - description: The id of the node to shutdown.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - 'cluster/{nodeId}/shutdown'
      description: 'Attempts to process all buffered and cached messages before exiting, shuts down inputs first to make sure that no new messages are accepted.'
      operationId: shutdown
      summary: Shutdown node gracefully.
  '/cluster/{nodeId}/threaddump':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the node where processing will be paused.
          in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemThreadDumpResponse'
      tags:
        - cluster
      operationId: threadDump
      summary: Get a thread dump of the given node
  /count/total:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MessageCountResponse'
      tags:
        - count
      operationId: total
      summary: Total number of messages in all your indices.
  '/count/{indexSetId}/total':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MessageCountResponse'
      tags:
        - count
      operationId: total
      summary: Total number of messages in all your indices.
  /dashboards:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DashboardList'
      tags:
        - dashboards
      operationId: list
      summary: Get a list of all dashboards and all configurations of their widgets.
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateDashboardRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - dashboards
      operationId: create
      summary: Create a dashboard
  '/dashboards/{dashboardId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: Dashboard not found.
      tags:
        - dashboards
      operationId: delete
      summary: Delete a dashboard and all its widgets
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '404':
          description: Dashboard not found.
      tags:
        - dashboards
      operationId: get
      summary: Get a single dashboards and all configurations of its widgets.
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/UpdateDashboardRequest'
      responses:
        '200':
          description: No response was specified
        '404':
          description: Dashboard not found.
      tags:
        - dashboards
      operationId: update
      summary: Update the settings of a dashboard.
  '/dashboards/{dashboardId}/positions':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/WidgetPositionsRequest'
      responses:
        '200':
          description: No response was specified
        '404':
          description: Dashboard not found.
      tags:
        - dashboards
      operationId: setPositions
      summary: Update/set the positions of dashboard widgets.
  '/dashboards/{dashboardId}/widgets':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/AddWidgetRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: No such widget type.
        '404':
          description: Dashboard not found.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: addWidget
      summary: Add a widget to a dashboard
  '/dashboards/{dashboardId}/widgets/{widgetId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: path
          name: widgetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: Widget not found.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: remove
      summary: Delete a widget
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: path
          name: widgetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/WidgetSummary'
        '404':
          description: Widget not found.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: getWidget
      summary: Get a widget
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: path
          name: widgetId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/AddWidgetRequest'
      responses:
        '200':
          description: No response was specified
        '404':
          description: Widget not found.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: updateWidget
      summary: Update a widget
  '/dashboards/{dashboardId}/widgets/{widgetId}/cachetime':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: path
          name: widgetId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/UpdateWidgetRequest'
      responses:
        '200':
          description: No response was specified
        '404':
          description: Widget not found.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: updateCacheTime
      summary: Update cache time of a widget
  '/dashboards/{dashboardId}/widgets/{widgetId}/description':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: path
          name: widgetId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/UpdateWidgetRequest'
      responses:
        '200':
          description: No response was specified
        '404':
          description: Widget not found.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: updateDescription
      summary: Update description of a widget
  '/dashboards/{dashboardId}/widgets/{widgetId}/value':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: dashboardId
          required: true
          type: string
        - in: path
          name: widgetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '404':
          description: Widget not found.
        '504':
          description: Computation failed on indexer side.
      tags:
        - 'dashboards/{dashboardId}/widgets'
      operationId: widgetValue
      summary: Get a single widget value.
  /filters/blacklist:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
            uniqueItems: true
      tags:
        - filters/blacklist
      operationId: getAll
      summary: Get all blacklist filters
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: filterEntry
          required: true
          schema:
            $ref: '#/definitions/FilterDescription'
      responses:
        '200':
          description: No response was specified
      tags:
        - filters/blacklist
      description: It can take up to a second until the change is applied
      operationId: create
      summary: Create a blacklist filter
  '/filters/blacklist/{filterId}':
    delete:
      parameters:
        - in: path
          name: filterId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - filters/blacklist
      description: It can take up to a second until the change is applied
      operationId: delete
      summary: Remove the existing blacklist filter
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: filterId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FilterDescription'
      tags:
        - filters/blacklist
      operationId: get
      summary: Get the existing blacklist filter
    put:
      parameters:
        - in: path
          name: filterId
          required: true
          type: string
        - in: body
          name: filterEntry
          required: true
          schema:
            $ref: '#/definitions/FilterDescription'
      responses:
        '200':
          description: No response was specified
      tags:
        - filters/blacklist
      description: It can take up to a second until the change is applied
      operationId: update
      summary: Update an existing blacklist filter
  /messages/parse:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/MessageParseRequest'
      responses:
        '200':
          description: No response was specified
          schema: {}
        '400':
          description: Could not decode message.
        '404':
          description: Specified codec does not exist.
      tags:
        - plugins/org.graylog.plugins.collector
      operationId: parse
      summary: Parse a raw message
  '/messages/{index}/analyze':
    get:
      produces:
        - application/json
      parameters:
        - description: The index the message containing the string is stored in.
          in: path
          name: index
          required: true
          type: string
        - description: The analyzer to use.
          in: query
          name: analyzer
          required: false
          type: string
        - description: The string to analyze.
          in: query
          name: string
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MessageTokens'
        '404':
          description: Specified index does not exist.
      tags:
        - plugins/org.graylog.plugins.collector
      description: Returns what tokens/terms a message string (message or full_message) is split to.
      operationId: analyze
      summary: Analyze a message string
  '/messages/{index}/{messageId}':
    get:
      produces:
        - application/json
      parameters:
        - description: The index this message is stored in.
          in: path
          name: index
          required: true
          type: string
        - in: path
          name: messageId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema: {}
        '404':
          description: Message does not exist.
      tags:
        - plugins/org.graylog.plugins.collector
      operationId: search
      summary: Get a single message.
  /plugins/org.graylog.plugins.collector/collectors:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CollectorList'
      tags:
        - roles
      operationId: list
      summary: Lists all existing collector registrations
  '/plugins/org.graylog.plugins.collector/collectors/{collectorId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: collectorId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CollectorSummary'
        '404':
          description: No collector with the specified id exists
      tags:
        - roles
      operationId: get
      summary: Returns at most one collector summary for the specified collector id
    put:
      produces:
        - application/json
      parameters:
        - description: The collector id this collector is registering as.
          in: path
          name: collectorId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CollectorRegistrationRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - roles
      description: This is a stateless method which upserts a collector registration
      operationId: register
      summary: Create/update a collector registration
  '/plugins/org.graylog.plugins.collector/collectors/{collectorId}/action':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: collectorId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
        '404':
          description: No actions found for specified id
      tags:
        - roles
      operationId: getAction
      summary: Returns queued actions for the specified collector id
    put:
      produces:
        - application/json
      parameters:
        - description: The collector id this collector is registering as.
          in: path
          name: collectorId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            items: {}
            type: array
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied action is not valid.
      tags:
        - roles
      operationId: setAction
      summary: Set a collector action
  /plugins/org.graylog.plugins.collector/configurations:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: listConfigurations
      summary: List all collector configurations
    post:
      produces:
        - application/json
      parameters:
        - in: query
          name: createDefaults
          required: false
          type: boolean
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: createConfiguration
      summary: Create new collector configuration
  /plugins/org.graylog.plugins.collector/configurations/tags:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: getTags
      summary: List all used tags
  '/plugins/org.graylog.plugins.collector/configurations/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: deleteConfiguration
      summary: Delete a collector configuration
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: getConfigurations
      summary: Show collector configuration details
  '/plugins/org.graylog.plugins.collector/configurations/{id}/inputs':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which inserts a collector input
      operationId: createInput
      summary: Create a configuration input
  '/plugins/org.graylog.plugins.collector/configurations/{id}/inputs/{inputId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration or Input not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: deleteInput
      summary: Delete input form configuration
  '/plugins/org.graylog.plugins.collector/configurations/{id}/inputs/{inputId}/{name}':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration or Input not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which copies a collector input to one with another name
      operationId: copyInput
      summary: Copy a configuration input
  '/plugins/org.graylog.plugins.collector/configurations/{id}/inputs/{input_id}':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: input_id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which updates a collector input
      operationId: updateInput
      summary: Update a configuration input
  '/plugins/org.graylog.plugins.collector/configurations/{id}/name':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: updateConfigurationName
      summary: Updates a collector configuration name
  '/plugins/org.graylog.plugins.collector/configurations/{id}/outputs':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which inserts a collector output
      operationId: createOutput
      summary: Create a configuration output
  '/plugins/org.graylog.plugins.collector/configurations/{id}/outputs/{outputId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration or Output not found.
        '412':
          description: Still inputs assigned to output
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: deleteOutput
      summary: Delete output from configuration
  '/plugins/org.graylog.plugins.collector/configurations/{id}/outputs/{outputId}/{name}':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration or Output not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which copies a collector output to one with another name
      operationId: copyOutput
      summary: Copy a configuration output
  '/plugins/org.graylog.plugins.collector/configurations/{id}/outputs/{output_id}':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: output_id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which updates a collector output
      operationId: updateOutput
      summary: Update a configuration output
  '/plugins/org.graylog.plugins.collector/configurations/{id}/snippets':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which inserts a collector configuration snippet
      operationId: createSnippet
      summary: Create a configuration snippet
  '/plugins/org.graylog.plugins.collector/configurations/{id}/snippets/{snippetId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration or Snippet not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: deleteSnippet
      summary: Delete snippet from configuration
  '/plugins/org.graylog.plugins.collector/configurations/{id}/snippets/{snippetId}/{name}':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration or Snippet not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which copies a collector snippet to one with another name
      operationId: copySnippet
      summary: Copy a configuration snippet
  '/plugins/org.graylog.plugins.collector/configurations/{id}/snippets/{snippet_id}':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: snippet_id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
        '400':
          description: The supplied request is not valid.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which updates a collector snippet
      operationId: updateSnippet
      summary: Update a configuration snippet
  '/plugins/org.graylog.plugins.collector/configurations/{id}/{name}':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Configuration not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      description: This is a stateless method which copies a collector configuration to one with another name
      operationId: copyConfiguration
      summary: Copy a configuration
  '/plugins/org.graylog.plugins.collector/{collectorId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: collectorId
          required: true
          type: string
        - in: query
          name: tags
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
        '304':
          description: Configuration didn't update.
        '400':
          description: Invalid ObjectId.
        '404':
          description: Collector not found.
      tags:
        - plugins/org.graylog.plugins.map/mapdata
      operationId: getConfiguration
      summary: Get a single collector configuration
  /plugins/org.graylog.plugins.map/mapdata:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/MapDataSearchRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MapDataSearchResult'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/connections
      operationId: mapData
      summary: Get map data
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/connections:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
            uniqueItems: true
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline
      operationId: getAll
      summary: Get all pipeline connections
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/connections/to_pipeline:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: Json body
          required: true
          schema:
            $ref: '#/definitions/PipelineReverseConnections'
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
            uniqueItems: true
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline
      operationId: connectStreams
      summary: Connect streams to a processing pipeline
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/connections/to_stream:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: Json body
          required: true
          schema:
            $ref: '#/definitions/PipelineConnections'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PipelineConnections'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline
      operationId: connectPipelines
      summary: Connect processing pipelines to a stream
  '/plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/connections/{streamId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PipelineConnections'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline
      operationId: getPipelinesForStream
      summary: Get pipeline connections for the given stream
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
      operationId: getAll
      summary: Get all processing pipelines
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: pipeline
          required: true
          schema:
            $ref: '#/definitions/PipelineSource'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PipelineSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
      operationId: createFromParser
      summary: Create a processing pipeline from source
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline/parse:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: pipeline
          required: true
          schema:
            $ref: '#/definitions/PipelineSource'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PipelineSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
      operationId: parse
      summary: Parse a processing pipeline without saving it
  '/plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
      description: It can take up to a second until the change is applied
      operationId: delete
      summary: Delete a processing pipeline
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PipelineSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
      description: It can take up to a second until the change is applied
      operationId: get
      summary: Get a processing pipeline
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: pipeline
          required: true
          schema:
            $ref: '#/definitions/PipelineSource'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PipelineSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
      description: It can take up to a second until the change is applied
      operationId: update
      summary: Modify a processing pipeline
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      operationId: getAll
      summary: Get all processing rules
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: rule
          required: true
          schema:
            $ref: '#/definitions/RuleSource'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RuleSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      operationId: createFromParser
      summary: Create a processing rule from source
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule/functions:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      operationId: functionDescriptors
      summary: Get function descriptors
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule/multiple:
    post:
      produces:
        - application/json
      parameters:
        - description: rules
          in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BulkRuleRequest'
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      operationId: getBulk
      summary: Retrieve the named processing rules in bulk
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule/parse:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: rule
          required: true
          schema:
            $ref: '#/definitions/RuleSource'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RuleSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      operationId: parse
      summary: Parse a processing rule without saving it
  '/plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      description: It can take up to a second until the change is applied
      operationId: delete
      summary: Delete a processing rule
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RuleSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      description: It can take up to a second until the change is applied
      operationId: get
      summary: Get a processing rule
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: rule
          required: true
          schema:
            $ref: '#/definitions/RuleSource'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RuleSource'
      tags:
        - plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
      description: It can take up to a second until the change is applied
      operationId: update
      summary: Modify a processing rule
  /plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: simulation
          required: true
          schema:
            $ref: '#/definitions/SimulationRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SimulationResponse'
      tags:
        - plugins/org.graylog.plugins.collector/collectors
      operationId: simulate
      summary: Simulate the execution of the pipeline message processor
  /roles:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RolesResponse'
      tags:
        - search/universal/absolute
      operationId: listAll
      summary: List all roles
    post:
      produces:
        - application/json
      parameters:
        - description: The new role to create
          in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/RoleResponse'
      responses:
        '200':
          description: No response was specified
      tags:
        - search/universal/absolute
      operationId: create
      summary: Create a new role
  '/roles/{rolename}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: rolename
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - search/universal/absolute
      operationId: delete
      summary: Remove the named role and dissociate any users from it
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: rolename
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RoleResponse'
      tags:
        - search/universal/absolute
      operationId: read
      summary: Retrieve permissions for a single role
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: rolename
          required: true
          type: string
        - description: The new representation of the role
          in: body
          name: JSON Body
          required: true
          schema:
            $ref: '#/definitions/RoleResponse'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RoleResponse'
      tags:
        - search/universal/absolute
      operationId: update
      summary: Update an existing role
  '/roles/{rolename}/members':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: rolename
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RoleMembershipResponse'
      tags:
        - search/universal/absolute
      operationId: getMembers
      summary: Retrieve the role's members
  '/roles/{rolename}/members/{username}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: rolename
          required: true
          type: string
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - search/universal/absolute
      operationId: removeMember
      summary: Remove a user from a role
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: rolename
          required: true
          type: string
        - in: path
          name: username
          required: true
          type: string
        - description: 'Placeholder because PUT requests should have a body. Set to ''{}'', the content will be ignored.'
          in: body
          name: JSON Body
          required: false
          schema:
            default: '{}'
            type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - search/universal/absolute
      operationId: addMember
      summary: Add a user to a role
  /search/decorators:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
      tags:
        - search/universal/keyword
      operationId: get
      summary: Returns all configured message decorations
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/DecoratorImpl'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Decorator'
      tags:
        - search/universal/keyword
      operationId: create
      summary: Creates a message decoration configuration
  /search/decorators/available:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - search/universal/keyword
      operationId: getAvailable
      summary: Returns all available message decorations
  '/search/decorators/{decoratorId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: decorator id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - search/universal/keyword
      operationId: delete
      summary: Create a decorator
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: decorator id
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/DecoratorImpl'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Decorator'
      tags:
        - search/universal/keyword
      operationId: update
      summary: Update a decorator
  /search/saved:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - sources
      operationId: list
      summary: Get a list of all saved searches
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateSavedSearchRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - sources
      operationId: create
      summary: Create a new saved search
  '/search/saved/{searchId}':
    delete:
      parameters:
        - in: path
          name: searchId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Saved search not found.
      tags:
        - sources
      operationId: delete
      summary: Delete a saved search
    get:
      parameters:
        - in: path
          name: searchId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '400':
          description: Invalid ObjectId.
        '404':
          description: Saved search not found.
      tags:
        - sources
      operationId: get
      summary: Get a single saved search
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: searchId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateSavedSearchRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '400':
          description: Validation error
        '404':
          description: Saved search not found.
      tags:
        - sources
      operationId: update
      summary: Update a saved search
  /search/universal/absolute:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Timerange start. See description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Maximum number of messages to return.
          in: query
          name: limit
          required: false
          type: integer
        - description: Offset
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Comma separated list of fields to return
          in: query
          name: fields
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: sort
          required: false
          type: string
        - default: true
          description: Run decorators on search result
          in: query
          name: decorate
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SearchResponse'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/decorators
      description: 'Search for messages using an absolute timerange, specified as from/to with format yyyy-MM-ddTHH:mm:ss.SSSZ (e.g. 2014-01-23T15:34:49.000Z) or yyyy-MM-dd HH:mm:ss.'
      operationId: searchAbsolute
      summary: Message search with absolute timerange.
  /search/universal/absolute/export:
    get:
      produces:
        - text/csv
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Timerange start. See description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Maximum number of messages to return.
          in: query
          name: limit
          required: false
          type: integer
        - description: Offset
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Comma separated list of fields to return
          in: query
          name: fields
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/decorators
      description: 'Search for messages using an absolute timerange, specified as from/to with format yyyy-MM-ddTHH:mm:ss.SSSZ (e.g. 2014-01-23T15:34:49.000Z) or yyyy-MM-dd HH:mm:ss.'
      operationId: exportSearchAbsoluteChunked
      summary: Export message search with absolute timerange.
  /search/universal/absolute/fieldhistogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Field of whose values to get the histogram of
          in: query
          name: field
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Timerange start. See search method description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See search method description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Calculate the cardinality of the field as well
          in: query
          name: cardinality
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HistogramResult'
        '400':
          description: Field is not of numeric type.
      tags:
        - search/decorators
      operationId: fieldHistogramAbsolute
      summary: Field value histogram of a query using an absolute timerange.
  /search/universal/absolute/histogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Timerange start. See search method description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See search method description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HistogramResult'
        '400':
          description: Invalid interval provided.
      tags:
        - search/decorators
      operationId: histogramAbsolute
      summary: Datetime histogram of a query using an absolute timerange.
  /search/universal/absolute/stats:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of numeric type to return statistics for
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Timerange start. See search method description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See search method description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FieldStatsResult'
        '400':
          description: Field is not of numeric type.
      tags:
        - search/decorators
      description: Returns statistics like min/max or standard deviation of numeric fields over the whole query result set.
      operationId: statsAbsolute
      summary: Field statistics for a query using an absolute timerange.
  /search/universal/absolute/terms:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Fields to stack
          in: query
          name: stacked_fields
          required: false
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: false
          type: integer
        - description: Timerange start. See search method description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See search method description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/decorators
      operationId: termsAbsolute
      summary: Most common field terms of a query using an absolute timerange.
  /search/universal/absolute/terms-histogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Fields to stack
          in: query
          name: stacked_fields
          required: false
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: true
          type: integer
        - description: Timerange start. See search method description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See search method description for date format
          in: query
          name: to
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsHistogramResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/decorators
      operationId: termsHistogramRelative
      summary: Most common field terms of a query over time using an absolute timerange.
  /search/universal/absolute/termsstats:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: key_field
          required: true
          type: string
        - description: Value field used for computation
          in: query
          name: value_field
          required: true
          type: string
        - description: 'What to order on (Allowed values: TERM, REVERSE_TERM, COUNT, REVERSE_COUNT, TOTAL, REVERSE_TOTAL, MIN, REVERSE_MIN, MAX, REVERSE_MAX, MEAN, REVERSE_MEAN)'
          in: query
          name: order
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: false
          type: integer
        - description: Timerange start. See search method description for date format
          in: query
          name: from
          required: true
          type: string
        - description: Timerange end. See search method description for date format
          in: query
          name: to
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsStatsResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/decorators
      operationId: termsStatsAbsolute
      summary: Ordered field terms of a query computed on another field using an absolute timerange.
  /search/universal/keyword:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: Maximum number of messages to return.
          in: query
          name: limit
          required: false
          type: integer
        - description: Offset
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Comma separated list of fields to return
          in: query
          name: fields
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: sort
          required: false
          type: string
        - default: true
          description: Run decorators on search result
          in: query
          name: decorate
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SearchResponse'
        '400':
          description: Invalid keyword provided.
      tags:
        - search/universal/relative
      description: Search for messages in a timerange defined by a keyword like "yesterday" or "2 weeks ago to wednesday".
      operationId: searchKeyword
      summary: Message search with keyword as timerange.
  /search/universal/keyword/export:
    get:
      produces:
        - text/csv
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: Maximum number of messages to return.
          in: query
          name: limit
          required: false
          type: integer
        - description: Offset
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Comma separated list of fields to return
          in: query
          name: fields
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid keyword provided.
      tags:
        - search/universal/relative
      description: Search for messages in a timerange defined by a keyword like "yesterday" or "2 weeks ago to wednesday".
      operationId: exportSearchKeywordChunked
      summary: Export message search with keyword as timerange.
  /search/universal/keyword/fieldhistogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Field of whose values to get the histogram of
          in: query
          name: field
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Calculate the cardinality of the field as well
          in: query
          name: cardinality
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HistogramResult'
        '400':
          description: Field is not of numeric type.
      tags:
        - search/universal/relative
      operationId: fieldHistogramKeyword
      summary: Datetime histogram of a query using keyword timerange.
  /search/universal/keyword/histogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HistogramResult'
        '400':
          description: Invalid interval provided.
      tags:
        - search/universal/relative
      operationId: histogramKeyword
      summary: Datetime histogram of a query using keyword timerange.
  /search/universal/keyword/stats:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of numeric type to return statistics for
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FieldStatsResult'
        '400':
          description: Field is not of numeric type.
      tags:
        - search/universal/relative
      description: Returns statistics like min/max or standard deviation of numeric fields over the whole query result set.
      operationId: statsKeyword
      summary: Field statistics for a query using a keyword timerange.
  /search/universal/keyword/terms:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Fields to stack
          in: query
          name: stacked_fields
          required: false
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: false
          type: integer
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/universal/relative
      operationId: termsKeyword
      summary: Most common field terms of a query using a keyword timerange.
  /search/universal/keyword/terms-histogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Fields to stack
          in: query
          name: stacked_fields
          required: false
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: true
          type: integer
        - description: Range keyword
          in: query
          name: keyword
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsHistogramResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/universal/relative
      operationId: termsHistogramRelative
      summary: Most common field terms of a query over time using a keyword timerange.
  /search/universal/keyword/termsstats:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: key_field
          required: true
          type: string
        - description: Value field used for computation
          in: query
          name: value_field
          required: true
          type: string
        - description: 'What to order on (Allowed values: TERM, REVERSE_TERM, COUNT, REVERSE_COUNT, TOTAL, REVERSE_TOTAL, MIN, REVERSE_MIN, MAX, REVERSE_MAX, MEAN, REVERSE_MEAN)'
          in: query
          name: order
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: false
          type: integer
        - description: Keyword timeframe
          in: query
          name: keyword
          required: true
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsStatsResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/universal/relative
      operationId: termsStatsRelative
      summary: Ordered field terms of a query computed on another field using a keyword timerange.
  /search/universal/relative:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Relative timeframe to search in. See method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Maximum number of messages to return.
          in: query
          name: limit
          required: false
          type: integer
        - description: Offset
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Comma separated list of fields to return
          in: query
          name: fields
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: sort
          required: false
          type: string
        - default: true
          description: Run decorators on search result
          in: query
          name: decorate
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SearchResponse'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/saved
      description: 'Search for messages in a relative timerange, specified as seconds from now. Example: 300 means search from 5 minutes ago to now.'
      operationId: searchRelative
      summary: Message search with relative timerange.
  /search/universal/relative/export:
    get:
      produces:
        - text/csv
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Relative timeframe to search in. See method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Maximum number of messages to return.
          in: query
          name: limit
          required: false
          type: integer
        - description: Offset
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Comma separated list of fields to return
          in: query
          name: fields
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/saved
      description: 'Search for messages in a relative timerange, specified as seconds from now. Example: 300 means search from 5 minutes ago to now.'
      operationId: exportSearchRelativeChunked
      summary: Export message search with relative timerange.
  /search/universal/relative/fieldhistogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Field of whose values to get the histogram of
          in: query
          name: field
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Relative timeframe to search in. See search method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: Calculate the cardinality of the field as well
          in: query
          name: cardinality
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HistogramResult'
        '400':
          description: Field is not of numeric type.
      tags:
        - search/saved
      operationId: fieldHistogramRelative
      summary: Field value histogram of a query using a relative timerange.
  /search/universal/relative/histogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: true
          type: string
        - description: Relative timeframe to search in. See search method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/HistogramResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/saved
      operationId: histogramRelative
      summary: Datetime histogram of a query using a relative timerange.
  /search/universal/relative/stats:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of numeric type to return statistics for
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Relative timeframe to search in. See search method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FieldStatsResult'
        '400':
          description: Field is not of numeric type.
      tags:
        - search/saved
      description: Returns statistics like min/max or standard deviation of numeric fields over the whole query result set.
      operationId: statsRelative
      summary: Field statistics for a query using a relative timerange.
  /search/universal/relative/terms:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Fields to stack
          in: query
          name: stacked_fields
          required: false
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: false
          type: integer
        - description: Relative timeframe to search in. See search method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/saved
      operationId: termsRelative
      summary: Most common field terms of a query using a relative timerange.
  /search/universal/relative/terms-histogram:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: field
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Fields to stack
          in: query
          name: stacked_fields
          required: false
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: true
          type: integer
        - description: Relative timeframe to search in. See search method description.
          in: query
          name: range
          required: true
          type: integer
        - description: 'Histogram interval / bucket size. (year, quarter, month, week, day, hour or minute)'
          in: query
          name: interval
          required: false
          type: string
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
        - description: 'Sorting (field:asc / field:desc)'
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsHistogramResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/saved
      operationId: termsHistogramRelative
      summary: Most common field terms of a query over time using a relative timerange.
  /search/universal/relative/termsstats:
    get:
      produces:
        - application/json
      parameters:
        - description: Message field of to return terms of
          in: query
          name: key_field
          required: true
          type: string
        - description: Value field used for computation
          in: query
          name: value_field
          required: true
          type: string
        - description: 'What to order on (Allowed values: TERM, REVERSE_TERM, COUNT, REVERSE_COUNT, TOTAL, REVERSE_TOTAL, MIN, REVERSE_MIN, MAX, REVERSE_MAX, MEAN, REVERSE_MEAN)'
          in: query
          name: order
          required: true
          type: string
        - description: Query (Lucene syntax)
          in: query
          name: query
          required: true
          type: string
        - description: Maximum number of terms to return
          in: query
          name: size
          required: false
          type: integer
        - description: Relative timeframe to search in. See search method description.
          in: query
          name: range
          required: true
          type: integer
        - description: Filter
          in: query
          name: filter
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TermsStatsResult'
        '400':
          description: Invalid timerange parameters provided.
      tags:
        - search/saved
      operationId: termsStatsRelative
      summary: Ordered field terms of a query computed on another field using a relative timerange.
  /sources:
    get:
      produces:
        - application/json
      parameters:
        - description: Relative timeframe to search in. See method description.
          in: query
          name: range
          required: true
          type: integer
        - default: 5000
          description: Maximum size of the result set.
          in: query
          name: size
          required: false
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SourcesList'
        '400':
          description: Invalid range parameter provided.
      tags:
        - 'system/inputs/{inputId}/staticfields'
      description: 'Range: The parameter is in seconds relative to the current time. 86400 means ''in the last day'',0 is special and means ''across all indices'''
      operationId: list
      summary: Get a list of all sources (not more than 5000) that have messages in the current indices. The result is cached for 10 seconds.
  /streams:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/StreamListResponse'
      tags:
        - streams
      operationId: get
      summary: Get a list of all streams
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - streams
      operationId: create
      summary: Create a stream
  /streams/alerts:
    get:
      produces:
        - application/json
      parameters:
        - default: 0
          description: Optional parameter to define a lower date boundary. (UNIX timestamp)
          in: query
          name: since
          required: false
          type: integer
        - default: 300
          description: Maximum number of alerts to return.
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertListSummary'
        '400':
          description: Invalid ObjectId.
      tags:
        - streams/alerts
      operationId: listRecent
      summary: Get the most recent alarms of all streams.
  /streams/alerts/paginated:
    get:
      produces:
        - application/json
      parameters:
        - default: 0
          description: The number of elements to skip (offset).
          in: query
          name: skip
          required: true
          type: integer
        - default: 300
          description: The maximum number of elements to return.
          in: query
          name: limit
          required: true
          type: integer
        - description: Alert state (resolved/unresolved)
          in: query
          name: state
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertListSummary'
        '400':
          description: Invalid ObjectId.
      tags:
        - streams/alerts
      operationId: listPaginated
      summary: 'Get alarms of all streams, filtered by specifying limit and offset parameters.'
  '/streams/alerts/{alertId}':
    get:
      produces:
        - application/json
      parameters:
        - description: The alert ID to retrieve.
          in: path
          name: alertId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertSummary'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Alert not found.
      tags:
        - streams/alerts
      operationId: get
      summary: Get an alert by ID.
  /streams/enabled:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/StreamListResponse'
      tags:
        - system
      operationId: getEnabled
      summary: Get a list of all enabled streams
  '/streams/{streamId}':
    delete:
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: delete
      summary: Delete a stream
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/StreamResponse'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: get
      summary: Get a single stream
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/UpdateStreamRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/StreamResponse'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: update
      summary: Update a stream
  '/streams/{streamId}/alerts':
    get:
      produces:
        - application/json
      parameters:
        - description: The stream id this new alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - default: 0
          description: Optional parameter to define a lower date boundary. (UNIX timestamp)
          in: query
          name: since
          required: false
          type: integer
        - default: 300
          description: Maximum number of alerts to return.
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertListSummary'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamid}/outputs'
      operationId: list
      summary: Get the most recent alarms of this stream.
  '/streams/{streamId}/alerts/check':
    get:
      produces:
        - application/json
      parameters:
        - description: The ID of the stream to check.
          in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamid}/outputs'
      operationId: checkConditions
      summary: Check for triggered alert conditions of this streams. Results cached for 30 seconds.
  '/streams/{streamId}/alerts/conditions':
    get:
      produces:
        - application/json
      parameters:
        - description: The stream id this new alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertConditionListSummary'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamId}/alerts'
      operationId: list
      summary: Get all alert conditions of this stream
    post:
      produces:
        - application/json
      parameters:
        - description: The stream id this new alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateConditionRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamId}/alerts'
      operationId: create
      summary: Create an alert condition
  '/streams/{streamId}/alerts/conditions/{conditionId}':
    delete:
      produces:
        - application/json
      parameters:
        - description: The stream id this alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - description: The alert condition id to be deleted
          in: path
          name: conditionId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamId}/alerts'
      operationId: delete
      summary: Delete an alert condition
    get:
      produces:
        - application/json
      parameters:
        - description: The stream id this alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - description: The alert condition id to be fetched
          in: path
          name: conditionId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertConditionSummary'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamId}/alerts'
      operationId: get
      summary: Get an alert condition
    put:
      produces:
        - application/json
      parameters:
        - description: The stream id the alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - description: The alert condition id.
          in: path
          name: conditionId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateConditionRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamId}/alerts'
      operationId: update
      summary: Modify an alert condition
  '/streams/{streamId}/alerts/paginated':
    get:
      produces:
        - application/json
      parameters:
        - description: The stream id this new alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - default: 0
          description: The number of elements to skip (offset).
          in: query
          name: skip
          required: true
          type: integer
        - default: 300
          description: The maximum number of elements to return.
          in: query
          name: limit
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlertListSummary'
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamid}/outputs'
      operationId: listPaginated
      summary: 'Get the alarms of this stream, filtered by specifying limit and offset parameters.'
  '/streams/{streamId}/alerts/receivers':
    delete:
      parameters:
        - description: The stream id this new alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - description: Name/ID of user or email address to remove from alert receivers.
          in: query
          name: entity
          required: true
          type: string
        - description: 'Type: users or emails'
          in: query
          name: type
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Stream has no email alarm callbacks.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamid}/outputs'
      operationId: removeReceiver
      summary: Remove an alert receiver
    post:
      parameters:
        - description: The stream id this new alert condition belongs to.
          in: path
          name: streamId
          required: true
          type: string
        - description: Name/ID of user or email address to add as alert receiver.
          in: query
          name: entity
          required: true
          type: string
        - description: 'Type: users or emails'
          in: query
          name: type
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Stream has no email alarm callbacks.
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamid}/outputs'
      operationId: addReceiver
      summary: Add an alert receiver
  '/streams/{streamId}/alerts/sendDummyAlert':
    post:
      parameters:
        - description: The stream id the test alert should be sent for.
          in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Stream has no alarm callbacks
        '404':
          description: Stream not found.
      tags:
        - 'streams/{streamid}/outputs'
      operationId: sendDummyAlert
      summary: Send a test mail for a given stream
  '/streams/{streamId}/clone':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CloneStreamRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid or missing Stream id.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: cloneStream
      summary: Clone a stream
  '/streams/{streamId}/pause':
    post:
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid or missing Stream id.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: pause
      summary: Pause a stream
  '/streams/{streamId}/resume':
    post:
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid or missing Stream id.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: resume
      summary: Resume a stream
  '/streams/{streamId}/testMatch':
    post:
      parameters:
        - in: path
          name: streamId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TestMatchResponse'
        '400':
          description: Invalid or missing Stream id.
        '404':
          description: Stream not found.
      tags:
        - system
      operationId: testMatch
      summary: Test matching of a stream against a supplied message
  '/streams/{streamid}/alarmcallbacks':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose alarm callbacks we want.
          in: path
          name: streamid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlarmCallbackListSummary'
      tags:
        - 'streams/{streamId}/alerts/conditions'
      operationId: get
      summary: Get a list of all alarm callbacks for this stream
    post:
      produces:
        - application/json
      parameters:
        - description: The stream id this new alarm callback belongs to.
          in: path
          name: streamid
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateAlarmCallbackRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - 'streams/{streamId}/alerts/conditions'
      operationId: create
      summary: Create an alarm callback
  '/streams/{streamid}/alarmcallbacks/available':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose alarm callbacks we want.
          in: path
          name: streamid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AvailableAlarmCallbacksResponse'
      tags:
        - 'streams/{streamId}/alerts/conditions'
      operationId: available
      summary: Get a list of all alarm callback types
  '/streams/{streamid}/alarmcallbacks/{alarmCallbackId}':
    delete:
      parameters:
        - description: The stream id this alarm callback belongs to.
          in: path
          name: streamid
          required: true
          type: string
        - in: path
          name: alarmCallbackId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Alarm callback not found.
      tags:
        - 'streams/{streamId}/alerts/conditions'
      operationId: delete
      summary: Delete an alarm callback
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose alarm callbacks we want.
          in: path
          name: streamid
          required: true
          type: string
        - description: The alarm callback id we are getting
          in: path
          name: alarmCallbackId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlarmCallbackSummary'
      tags:
        - 'streams/{streamId}/alerts/conditions'
      operationId: get
      summary: Get a single specified alarm callback for this stream
    put:
      produces:
        - application/json
      parameters:
        - description: The stream id this alarm callback belongs to.
          in: path
          name: streamid
          required: true
          type: string
        - in: path
          name: alarmCallbackId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateAlarmCallbackRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - 'streams/{streamId}/alerts/conditions'
      operationId: update
      summary: Update an alarm callback
  '/streams/{streamid}/alerts/{alertId}/history':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose alarm callbacks history we want.
          in: path
          name: streamid
          required: true
          type: string
        - description: The id of the alert whose callback history we want.
          in: path
          name: alertId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AlarmCallbackHistoryListSummary'
      tags:
        - 'streams/{streamid}/alerts/{alertId}/history'
      operationId: getForAlert
      summary: Get a list of all alarm callbacks for this stream
  '/streams/{streamid}/outputs':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose outputs we want.
          in: path
          name: streamid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OutputListResponse'
        '404':
          description: No such stream on this node.
      tags:
        - 'streams/{streamid}/rules'
      operationId: get
      summary: Get a list of all outputs for a stream
    post:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose outputs we want.
          in: path
          name: streamid
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/AddOutputRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid output specification in input.
      tags:
        - 'streams/{streamid}/rules'
      operationId: add
      summary: Associate outputs with a stream
  '/streams/{streamid}/outputs/{outputId}':
    delete:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose outputs we want.
          in: path
          name: streamid
          required: true
          type: string
        - description: The id of the output that should be deleted
          in: path
          name: outputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such stream/output on this node.
      tags:
        - 'streams/{streamid}/rules'
      operationId: remove
      summary: Delete output of a stream
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose outputs we want.
          in: path
          name: streamid
          required: true
          type: string
        - description: The id of the output we want.
          in: path
          name: outputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OutputSummary'
        '404':
          description: No such stream/output on this node.
      tags:
        - 'streams/{streamid}/rules'
      operationId: get
      summary: Get specific output of a stream
  '/streams/{streamid}/rules':
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose stream rules we want.
          in: path
          name: streamid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/StreamRuleListResponse'
      tags:
        - streams
      operationId: get
      summary: Get a list of all stream rules
    post:
      produces:
        - application/json
      parameters:
        - description: The stream id this new rule belongs to.
          in: path
          name: streamid
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamRuleRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - streams
      operationId: create
      summary: Create a stream rule
  '/streams/{streamid}/rules/types':
    get:
      produces:
        - application/json
      parameters:
        - description: The stream id this new rule belongs to.
          in: path
          name: streamid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
      tags:
        - streams
      operationId: types
      summary: Get all available stream types
  '/streams/{streamid}/rules/{streamRuleId}':
    delete:
      parameters:
        - description: The stream id this new rule belongs to.
          in: path
          name: streamid
          required: true
          type: string
        - in: path
          name: streamRuleId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid ObjectId.
        '404':
          description: Stream rule not found.
      tags:
        - streams
      operationId: delete
      summary: Delete a stream rule
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the stream whose stream rule we want.
          in: path
          name: streamid
          required: true
          type: string
        - description: The stream rule id we are getting
          in: path
          name: streamRuleId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/StreamRule'
      tags:
        - streams
      operationId: get
      summary: Get a single stream rules
    put:
      produces:
        - application/json
      parameters:
        - description: The stream id this rule belongs to.
          in: path
          name: streamid
          required: true
          type: string
        - description: The stream rule id we are updating
          in: path
          name: streamRuleId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamRuleRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SingleStreamRuleSummaryResponse'
        '400':
          description: Invalid JSON Body.
        '404':
          description: Stream or stream rule not found.
      tags:
        - streams
      operationId: update
      summary: Update a stream rule
  /system:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemOverviewResponse'
      tags:
        - system/authentication
      operationId: system
      summary: Get system overview
  /system/authentication/config:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - system/bundles
      operationId: getAuthenticators
      summary: Retrieve authentication providers configuration
    put:
      produces:
        - application/json
      parameters:
        - in: body
          name: config
          required: true
          schema: {}
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - system/bundles
      operationId: create
      summary: Update authentication providers configuration
  /system/bundles:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
        '500':
          description: Error loading content packs
      tags:
        - system/cluster
      operationId: listBundles
      summary: List available content packs
    post:
      produces:
        - application/json
      parameters:
        - description: Content pack
          in: body
          name: Request body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationBundle'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid content pack
        '500':
          description: Error while saving content pack
      tags:
        - system/cluster
      operationId: createBundle
      summary: Upload a content pack
  /system/bundles/export:
    post:
      produces:
        - application/json
      parameters:
        - description: Export content pack
          in: body
          name: exportBundle
          required: true
          schema:
            $ref: '#/definitions/ExportBundle'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ConfigurationBundle'
        '500':
          description: Error while exporting content pack
      tags:
        - system/cluster
      operationId: exportBundle
      summary: Export entities as a content pack
  '/system/bundles/{bundleId}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Content pack ID
          in: path
          name: bundleId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: Missing or invalid content pack
        '500':
          description: Error while applying content pack
      tags:
        - system/cluster
      operationId: deleteBundle
      summary: Delete content pack
    get:
      produces:
        - application/json
      parameters:
        - description: Content pack ID
          in: path
          name: bundleId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ConfigurationBundle'
        '404':
          description: Missing or invalid content pack
        '500':
          description: Error while loading content pack
      tags:
        - system/cluster
      operationId: showBundle
      summary: Show content pack
    put:
      produces:
        - application/json
      parameters:
        - description: Content pack ID
          in: path
          name: bundleId
          required: true
          type: string
        - description: Content pack
          in: body
          name: Request body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationBundle'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid content pack
        '500':
          description: Error while updating content pack
      tags:
        - system/cluster
      operationId: updateBundle
      summary: Update content pack
  '/system/bundles/{bundleId}/apply':
    post:
      produces:
        - application/json
      parameters:
        - description: Content pack ID
          in: path
          name: bundleId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: Missing or invalid content pack
        '500':
          description: Error while applying content pack
      tags:
        - system/cluster
      operationId: applyBundle
      summary: Set up entities described by content pack
  /system/cluster/node:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/NodeSummary'
      tags:
        - system/cluster_config
      description: This is returning information of this node in context to its state in the cluster. Use the system API of the node itself to get system information.
      operationId: node
      summary: Information about this node.
  /system/cluster/nodes:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/NodeSummaryList'
      tags:
        - system/cluster_config
      operationId: nodes
      summary: List all active nodes in this cluster.
  '/system/cluster/nodes/{nodeId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/NodeSummary'
        '404':
          description: Node not found.
      tags:
        - system/cluster_config
      description: This is returning information of a node in context to its state in the cluster. Use the system API of the node itself to get system information.
      operationId: node
      summary: Information about a node.
  /system/cluster/stats:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClusterStats'
      tags:
        - system/cluster/traffic
      description: This resource returns information about the Graylog cluster.
      operationId: systemStats
      summary: Cluster status information.
  /system/cluster/stats/elasticsearch:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ElasticsearchStats'
      tags:
        - system/cluster/traffic
      description: This resource returns information about the Elasticsearch Cluster.
      operationId: elasticsearchStats
      summary: Elasticsearch information.
  /system/cluster/stats/mongo:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MongoStats'
      tags:
        - system/cluster/traffic
      description: This resource returns information about MongoDB.
      operationId: mongoStats
      summary: MongoDB information.
  /system/cluster/traffic:
    get:
      produces:
        - application/json
      parameters:
        - default: 30
          description: For how many days the traffic stats should be returned
          in: query
          name: days
          required: false
          type: integer
        - default: false
          description: Whether the traffic should be aggregate to daily values
          in: query
          name: daily
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TrafficHistogram'
      tags:
        - system/codecs/types
      operationId: get
      summary: Get the cluster traffic stats
  /system/cluster_config:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClusterConfigList'
      tags:
        - system/cluster/stats
      operationId: list
      summary: List all configuration classes
  '/system/cluster_config/{configClass}':
    delete:
      produces:
        - application/json
      parameters:
        - description: The name of the cluster configuration class
          in: path
          name: configClass
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/cluster/stats
      operationId: delete
      summary: Delete configuration settings from database
    get:
      produces:
        - application/json
      parameters:
        - description: The name of the cluster configuration class
          in: path
          name: configClass
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/cluster/stats
      operationId: read
      summary: Get configuration settings from database
    put:
      produces:
        - application/json
      parameters:
        - description: The name of the cluster configuration class
          in: path
          name: configClass
          required: true
          type: string
        - description: The payload of the cluster configuration
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InputStream'
      responses:
        '200':
          description: No response was specified
      tags:
        - system/cluster/stats
      operationId: update
      summary: Update configuration in database
  /system/codecs/types/all:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/configuration
      operationId: getAll
      summary: Get all codec types
  /system/configuration:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ExposedConfiguration'
      tags:
        - system/debug/events
      operationId: getRelevant
      summary: Get relevant configuration settings and their values
  /system/debug/events/cluster:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DebugEvent'
      tags:
        - system/deflector
      operationId: showLastClusterDebugEvent
      summary: Show last received cluster debug event.
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: text
          required: false
          schema:
            default: Cluster Test
            type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/deflector
      operationId: generateClusterDebugEvent
      summary: Create and send a cluster debug event.
  /system/debug/events/local:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DebugEvent'
      tags:
        - system/deflector
      operationId: showLastDebugEvent
      summary: Show last received local debug event.
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: text
          required: false
          schema:
            default: Local Test
            type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/deflector
      operationId: generateDebugEvent
      summary: Create and send a local debug event.
  /system/deflector:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DeflectorSummary'
      tags:
        - system/fields
      operationId: deprecatedDeflector
      summary: Get current deflector status
  /system/deflector/cycle:
    post:
      responses:
        '200':
          description: No response was specified
      tags:
        - system/fields
      operationId: deprecatedCycle
      summary: Cycle deflector to new/next index
  '/system/deflector/{indexSetId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DeflectorSummary'
      tags:
        - system/fields
      operationId: deflector
      summary: Get current deflector status in index set
  '/system/deflector/{indexSetId}/cycle':
    post:
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/fields
      operationId: cycle
      summary: Cycle deflector to new/next index in index set
  /system/fields:
    get:
      produces:
        - application/json
      parameters:
        - description: Maximum number of fields to return. Set to 0 for all fields.
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/gettingstarted
      description: This operation is comparably fast because it reads directly from the indexer mapping.
      operationId: fields
      summary: Get list of message fields that exist
  /system/gettingstarted:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DisplayGettingStarted'
      tags:
        - system/grok
      operationId: displayGettingStarted
      summary: Check whether to display the Getting started guide for this version
  /system/gettingstarted/dismiss:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
      tags:
        - system/grok
      operationId: dismissGettingStarted
      summary: Dismiss auto-showing getting started guide for this version
  /system/grok:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/GrokPatternList'
      tags:
        - system/indices/ranges
      operationId: listGrokPatterns
      summary: Get all existing grok patterns
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: pattern
          required: true
          schema:
            $ref: '#/definitions/GrokPattern'
      responses:
        '200':
          description: No response was specified
      tags:
        - system/indices/ranges
      operationId: createPattern
      summary: Add a new named pattern
    put:
      produces:
        - application/json
      parameters:
        - in: body
          name: patterns
          required: true
          schema:
            $ref: '#/definitions/GrokPatternList'
        - default: false
          description: Replace all patterns with the new ones.
          in: query
          name: replace
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
      tags:
        - system/indices/ranges
      operationId: bulkUpdatePatterns
      summary: Add a list of new patterns
  '/system/grok/{patternId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: patternId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/indices/ranges
      operationId: removePattern
      summary: Remove an existing pattern by id
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: patternId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/GrokPattern'
      tags:
        - system/indices/ranges
      operationId: listPattern
      summary: Get the existing grok pattern
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: patternId
          required: true
          type: string
        - in: body
          name: pattern
          required: true
          schema:
            $ref: '#/definitions/GrokPattern'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/GrokPattern'
      tags:
        - system/indices/ranges
      operationId: updatePattern
      summary: Update an existing pattern
  /system/indexer/cluster/health:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClusterHealth'
      tags:
        - system/indexer/failures
      operationId: clusterHealth
      summary: Get cluster and shard health overview
  /system/indexer/cluster/name:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClusterName'
      tags:
        - system/indexer/failures
      operationId: clusterName
      summary: Get the cluster name
  /system/indexer/failures:
    get:
      produces:
        - application/json
      parameters:
        - description: Limit
          in: query
          name: limit
          required: true
          type: integer
        - description: Offset
          in: query
          name: offset
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/indexer/indices
      operationId: single
      summary: Get a list of failed index operations.
  /system/indexer/failures/count:
    get:
      produces:
        - application/json
      parameters:
        - description: ISO8601 date
          in: query
          name: since
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FailureCount'
        '400':
          description: Invalid date parameter provided.
      tags:
        - system/indexer/indices
      operationId: count
      summary: Total count of failed index operations since the given date.
  /system/indexer/indices:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AllIndices'
      tags:
        - system/indexer/overview
      operationId: all
      summary: 'List all open, closed and reopened indices.'
  /system/indexer/indices/closed:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClosedIndices'
      tags:
        - system/indexer/overview
      operationId: closed
      summary: Get a list of closed indices that can be reopened.
  /system/indexer/indices/multiple:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: Requested indices
          required: true
          schema:
            $ref: '#/definitions/IndicesReadRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/indexer/overview
      operationId: multiple
      summary: Get information of all specified indices and their shards.
  /system/indexer/indices/open:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OpenIndicesInfo'
      tags:
        - system/indexer/overview
      operationId: open
      summary: Get information of all open indices managed by Graylog and their shards.
  /system/indexer/indices/reopened:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClosedIndices'
      tags:
        - system/indexer/overview
      operationId: reopened
      summary: 'Get a list of reopened indices, which will not be cleaned by retention cleaning'
  '/system/indexer/indices/{indexSetId}/closed':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClosedIndices'
      tags:
        - system/indexer/overview
      operationId: indexSetClosed
      summary: Get a list of closed indices that can be reopened.
  '/system/indexer/indices/{indexSetId}/list':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AllIndices'
      tags:
        - system/indexer/overview
      operationId: indexSetList
      summary: 'List all open, closed and reopened indices.'
  '/system/indexer/indices/{indexSetId}/open':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OpenIndicesInfo'
      tags:
        - system/indexer/overview
      operationId: indexSetOpen
      summary: Get information of all open indices managed by Graylog and their shards.
  '/system/indexer/indices/{indexSetId}/reopened':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ClosedIndices'
      tags:
        - system/indexer/overview
      operationId: indexSetReopened
      summary: 'Get a list of reopened indices, which will not be cleaned by retention cleaning'
  '/system/indexer/indices/{index}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '403':
          description: You cannot delete the current deflector target index.
      tags:
        - system/indexer/overview
      operationId: delete
      summary: Delete an index. This will also trigger an index ranges rebuild job.
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexInfo'
      tags:
        - system/indexer/overview
      operationId: single
      summary: Get information of an index and its shards.
  '/system/indexer/indices/{index}/close':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '403':
          description: You cannot close the current deflector target index.
      tags:
        - system/indexer/overview
      operationId: close
      summary: Close an index. This will also trigger an index ranges rebuild job.
  '/system/indexer/indices/{index}/reopen':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/indexer/overview
      operationId: reopen
      summary: Reopen a closed index. This will also trigger an index ranges rebuild job.
  /system/indexer/overview:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexerOverview'
      tags:
        - messages
      operationId: index
      summary: 'Get overview of current indexing state, including deflector config, cluster state, index ranges & message counts.'
  '/system/indexer/overview/{indexSetId}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexerOverview'
      tags:
        - messages
      operationId: index
      summary: 'Get overview of current indexing state for the given index set, including deflector config, cluster state, index ranges & message counts.'
  /system/indices/index_sets:
    get:
      produces:
        - application/json
      parameters:
        - default: 0
          description: The number of elements to skip (offset).
          in: query
          name: skip
          required: true
          type: integer
        - default: 0
          description: The maximum number of elements to return.
          in: query
          name: limit
          required: true
          type: integer
        - default: false
          description: Include index set stats.
          in: query
          name: stats
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetResponse'
        '403':
          description: Unauthorized
      tags:
        - system/indices/retention
      operationId: list
      summary: Get a list of all index sets
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: Index set configuration
          required: true
          schema:
            $ref: '#/definitions/IndexSetSummary'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetSummary'
        '403':
          description: Unauthorized
      tags:
        - system/indices/retention
      operationId: save
      summary: Create index set
  /system/indices/index_sets/stats:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetStats'
        '403':
          description: Unauthorized
      tags:
        - system/indices/retention
      operationId: globalStats
      summary: Get stats of all index sets
  '/system/indices/index_sets/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - default: true
          in: query
          name: delete_indices
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
        '403':
          description: Unauthorized
        '404':
          description: Index set not found
      tags:
        - system/indices/retention
      operationId: delete
      summary: Delete index set
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetSummary'
        '403':
          description: Unauthorized
        '404':
          description: Index set not found
      tags:
        - system/indices/retention
      operationId: get
      summary: Get index set
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: Index set configuration
          required: true
          schema:
            $ref: '#/definitions/IndexSetUpdateRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetSummary'
        '403':
          description: Unauthorized
        '409':
          description: Mismatch of IDs in URI path and payload
      tags:
        - system/indices/retention
      operationId: update
      summary: Update index set
  '/system/indices/index_sets/{id}/default':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetSummary'
        '403':
          description: Unauthorized
      tags:
        - system/indices/retention
      operationId: setDefault
      summary: Set default index set
  '/system/indices/index_sets/{id}/stats':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexSetStats'
        '403':
          description: Unauthorized
        '404':
          description: Index set not found
      tags:
        - system/indices/retention
      operationId: indexSetStatistics
      summary: Get index set statistics
  /system/indices/ranges:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexRangesResponse'
      tags:
        - system/indices/index_sets
      operationId: list
      summary: Get a list of all index ranges
  '/system/indices/ranges/index_set/{indexSetId}/rebuild':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: indexSetId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '202':
          description: Rebuild/sync systemjob triggered.
      tags:
        - system/indices/index_sets
      description: This triggers a systemjob that scans every index in the given index set and stores meta information about what indices contain messages in what timeranges. It atomically overwrites already existing meta information.
      operationId: rebuildIndexSet
      summary: Rebuild/sync index range information for the given index set.
  /system/indices/ranges/rebuild:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
        '202':
          description: Rebuild/sync systemjob triggered.
      tags:
        - system/indices/index_sets
      description: This triggers a systemjob that scans every index and stores meta information about what indices contain messages in what timeranges. It atomically overwrites already existing meta information.
      operationId: rebuild
      summary: Rebuild/sync index range information.
  '/system/indices/ranges/{index: [a-z_0-9-]+}/rebuild':
    post:
      produces:
        - application/json
      parameters:
        - description: The name of the Graylog-managed Elasticsearch index
          in: path
          name: index
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '202':
          description: Rebuild/sync system job triggered.
      tags:
        - system/indices/index_sets
      description: This triggers a system job that scans an index and stores meta information about what indices contain messages in what time ranges. It atomically overwrites already existing meta information.
      operationId: rebuildIndex
      summary: Rebuild/sync index range information.
  '/system/indices/ranges/{index: [a-z_0-9]+}':
    get:
      produces:
        - application/json
      parameters:
        - description: The name of the Graylog-managed Elasticsearch index
          in: path
          name: index
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/IndexRangeSummary'
      tags:
        - system/indices/index_sets
      operationId: show
      summary: Show single index range
  /system/indices/retention/strategies:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RetentionStrategies'
      tags:
        - system/indices/rotation
      description: This resource returns a list of all available retention strategies on this Graylog node.
      operationId: list
      summary: List available retention strategies
  '/system/indices/retention/strategies/{strategy}':
    get:
      produces:
        - application/json
      parameters:
        - description: The name of the retention strategy
          in: path
          name: strategy
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RetentionStrategyDescription'
      tags:
        - system/indices/rotation
      description: This resource returns a JSON schema for the configuration of the given retention strategy.
      operationId: configSchema
      summary: Show JSON schema for configuration of given retention strategies
  /system/indices/rotation/strategies:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RotationStrategies'
      tags:
        - system/inputstates
      description: This resource returns a list of all available rotation strategies on this Graylog node.
      operationId: list
      summary: List available rotation strategies
  '/system/indices/rotation/strategies/{strategy}':
    get:
      produces:
        - application/json
      parameters:
        - description: The name of the rotation strategy
          in: path
          name: strategy
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RotationStrategyDescription'
      tags:
        - system/inputstates
      description: This resource returns a JSON schema for the configuration of the given rotation strategy.
      operationId: configSchema
      summary: Show JSON schema for configuration of given rotation strategies
  /system/inputs:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputsList'
      tags:
        - system/inputs/types
      operationId: list
      summary: Get all inputs
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/InputCreateRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Type is exclusive and already has input running
        '404':
          description: No such input type registered
      tags:
        - system/inputs/types
      operationId: create
      summary: Launch input on this node
  /system/inputs/types:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputTypesSummary'
      tags:
        - system/jobs
      operationId: types
      summary: Get all available input types of this node
  /system/inputs/types/all:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/jobs
      operationId: all
      summary: Get information about all input types
  '/system/inputs/types/{inputType}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputType
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputTypeInfo'
        '404':
          description: No such input type registered.
      tags:
        - system/jobs
      operationId: info
      summary: Get information about a single input type
  '/system/inputs/{inputId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such input on this node.
      tags:
        - system/inputs/types
      operationId: terminate
      summary: Terminate input on this node
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputSummary'
        '404':
          description: No such input.
      tags:
        - system/inputs/types
      operationId: get
      summary: Get information of a single input on this node
    put:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/InputCreateRequest'
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid input configuration.
        '404':
          description: No such input on this node.
      tags:
        - system/inputs/types
      operationId: update
      summary: Update input on this node
  '/system/inputs/{inputId}/extractors':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ExtractorSummaryList'
        '404':
          description: No such input on this node.
      tags:
        - 'system/inputs/{inputId}/extractors'
      operationId: list
      summary: List all extractors of an input
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateExtractorRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid configuration.
        '404':
          description: No such input on this node.
      tags:
        - 'system/inputs/{inputId}/extractors'
      operationId: create
      summary: Add an extractor to an input
  '/system/inputs/{inputId}/extractors/order':
    post:
      parameters:
        - description: Persist ID (!) of input.
          in: path
          name: inputId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/OrderExtractorsRequest'
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such input on this node.
      tags:
        - 'system/inputs/{inputId}/extractors'
      operationId: order
      summary: Update extractor order of an input
  '/system/inputs/{inputId}/extractors/{extractorId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
        - in: path
          name: extractorId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid request.
        '404':
          description: Extractor not found.
      tags:
        - 'system/inputs/{inputId}/extractors'
      operationId: terminate
      summary: Delete an extractor
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
        - in: path
          name: extractorId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ExtractorSummary'
        '404':
          description: No such extractor on this input.
      tags:
        - 'system/inputs/{inputId}/extractors'
      operationId: single
      summary: Get information of a single extractor of an input
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
        - in: path
          name: extractorId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateExtractorRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ExtractorSummary'
        '400':
          description: Missing or invalid configuration.
        '404':
          description: No such extractor on this input.
      tags:
        - 'system/inputs/{inputId}/extractors'
      operationId: update
      summary: Update an extractor
  '/system/inputs/{inputId}/staticfields':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateStaticFieldRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid configuration.
        '404':
          description: No such input on this node.
      tags:
        - 'streams/{streamid}/alarmcallbacks'
      operationId: create
      summary: Add a static field to an input
  '/system/inputs/{inputId}/staticfields/{key}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: Key
          required: true
          type: string
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such static field.
      tags:
        - 'streams/{streamid}/alarmcallbacks'
      operationId: delete
      summary: Remove static field of an input
  /system/inputstates:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputStatesList'
      tags:
        - system/inputs
      operationId: list
      summary: Get all input states of this node
  '/system/inputstates/{inputId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputDeleted'
        '404':
          description: No such input on this node.
      tags:
        - system/inputs
      operationId: stop
      summary: Stop specified input on this node
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputStateSummary'
        '404':
          description: No such input on this node.
      tags:
        - system/inputs
      operationId: get
      summary: Get input state for specified input id on this node
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: inputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/InputCreated'
        '404':
          description: No such input on this node.
      tags:
        - system/inputs
      operationId: start
      summary: (Re-)Start specified input on this node
  /system/jobs:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/journal
      operationId: list
      summary: List currently running jobs
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/TriggerRequest'
      responses:
        '200':
          description: No response was specified
        '202':
          description: Job accepted.
        '400':
          description: There is no such systemjob type.
        '403':
          description: Maximum concurrency level of this systemjob type reached.
      tags:
        - system/journal
      operationId: trigger
      summary: Trigger new job
  '/system/jobs/{jobId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: jobId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemJobSummary'
      tags:
        - system/journal
      operationId: cancel
      summary: Cancel running job
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: jobId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemJobSummary'
        '404':
          description: Job not found.
      tags:
        - system/journal
      operationId: get
      summary: Get information of a specific currently running job
  /system/journal:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/JournalSummaryResponse'
      tags:
        - system/ldap
      operationId: show
      summary: Get current state of the journal on this node.
  /system/jvm:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemJVMResponse'
      tags:
        - system/authentication
      operationId: jvm
      summary: Get JVM information
  /system/lbstatus:
    get:
      produces:
        - text/plain
      responses:
        '200':
          description: No response was specified
      tags:
        - system/loggers
      operationId: status
      summary: 'Get status of this Graylog server node for load balancers. Returns ALIVE with HTTP 200, DEAD with HTTP 503, or THROTTLED with HTTP 429.'
  '/system/lbstatus/override/{status}':
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/loggers
      operationId: override
      summary: 'Override load balancer status of this Graylog server node. Next lifecycle change will override it again to its default. Set to ALIVE, DEAD, or THROTTLED.'
  /system/ldap/groups:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            items: {}
            type: array
            uniqueItems: true
      tags:
        - system/lbstatus
      operationId: readGroups
      summary: Get the available LDAP groups
  /system/ldap/settings:
    delete:
      responses:
        '200':
          description: No response was specified
      tags:
        - system/lbstatus
      operationId: deleteLdapSettings
      summary: Remove the LDAP configuration
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LdapSettingsResponse'
      tags:
        - system/lbstatus
      operationId: getLdapSettings
      summary: Get the LDAP configuration if it is configured
    put:
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/LdapSettingsRequest'
      responses:
        '200':
          description: No response was specified
      tags:
        - system/lbstatus
      operationId: updateLdapSettings
      summary: Update the LDAP configuration
  /system/ldap/settings/groups:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/lbstatus
      description: The return value is a simple hash with keys being the LDAP group names and the values the corresponding Graylog role names.
      operationId: readGroupMapping
      summary: Get the LDAP group to Graylog role mapping
    put:
      parameters:
        - description: A hash in which the keys are the LDAP group names and values is the Graylog role name.
          in: body
          name: JSON body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: No response was specified
      tags:
        - system/lbstatus
      description: Corresponds directly to the output of GET /system/ldap/settings/groups
      operationId: updateGroupMappingSettings
      summary: Update the LDAP group to Graylog role mapping
  /system/ldap/test:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: Configuration to test
          required: true
          schema:
            $ref: '#/definitions/LdapTestConfigRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LdapTestConfigResponse'
      tags:
        - system/lbstatus
      operationId: testLdapConfiguration
      summary: Test LDAP Configuration
  /system/locales:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LocalesResponse'
      tags:
        - system/authentication
      operationId: locales
      summary: Get supported locales
  /system/loggers:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LoggersSummary'
      tags:
        - system/lookup
      operationId: loggers
      summary: List all loggers and their current levels
  /system/loggers/messages/recent:
    get:
      produces:
        - application/json
      parameters:
        - default: 500
          description: How many log messages should be returned
          in: query
          name: limit
          required: false
          type: integer
        - default: ALL
          description: Which log level (or higher) should the messages have
          in: query
          name: level
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LogMessagesSummary'
        '404':
          description: Memory appender is disabled.
        '500':
          description: Memory appender is broken.
      tags:
        - system/lookup
      operationId: messages
      summary: Get recent internal log messages
  /system/loggers/subsystems:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SubsystemSummary'
      tags:
        - system/lookup
      operationId: subsystems
      summary: List all logger subsystems and their current levels
  '/system/loggers/subsystems/{subsystem}/level/{level}':
    put:
      parameters:
        - in: path
          name: subsystem
          required: true
          type: string
        - in: path
          name: level
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such subsystem.
      tags:
        - system/lookup
      description: Provided level is falling back to DEBUG if it does not exist
      operationId: setSubsystemLoggerLevel
      summary: Set the loglevel of a whole subsystem
  '/system/loggers/{loggerName}/level/{level}':
    put:
      parameters:
        - in: path
          name: loggerName
          required: true
          type: string
        - in: path
          name: level
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/lookup
      description: Provided level is falling back to DEBUG if it does not exist
      operationId: setSingleLoggerLevel
      summary: Set the loglevel of a single logger
  /system/lookup/adapters:
    get:
      produces:
        - application/json
      parameters:
        - default: 1
          in: query
          name: page
          required: false
          type: integer
        - default: 50
          in: query
          name: per_page
          required: false
          type: integer
        - default: title
          description: The field to sort the result on
          in: query
          name: sort
          required: true
          type: string
        - default: desc
          description: The sort direction
          in: query
          name: order
          required: false
          type: string
        - in: query
          name: query
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DataAdapterPage'
      tags:
        - system/messageprocessors
      operationId: adapters
      summary: List available data adapters
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DataAdapterApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DataAdapterApi'
      tags:
        - system/messageprocessors
      operationId: createAdapter
      summary: Create a new data adapter
  /system/lookup/adapters/validate:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DataAdapterApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ValidationResult'
      tags:
        - system/messageprocessors
      operationId: validateAdapter
      summary: Validate the data adapter config
  '/system/lookup/adapters/{idOrName}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DataAdapterApi'
      tags:
        - system/messageprocessors
      description: 'The data adapter cannot be in use by any lookup table, otherwise the request will fail.'
      operationId: deleteAdapter
      summary: Delete the given data adapter
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DataAdapterApi'
      tags:
        - system/messageprocessors
      operationId: getAdapter
      summary: List the given data adapter
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/DataAdapterApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/DataAdapterApi'
      tags:
        - system/messageprocessors
      operationId: updateAdapter
      summary: Update the given data adapter settings
  '/system/lookup/adapters/{name}/query':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          type: string
        - in: query
          name: key
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema: {}
        '404':
          description: If the adapter cannot be found (if it failed or doesn't exist at all)
      tags:
        - system/messageprocessors
      operationId: performAdapterLookup
      summary: Query a lookup table
  /system/lookup/caches:
    get:
      produces:
        - application/json
      parameters:
        - default: 1
          in: query
          name: page
          required: false
          type: integer
        - default: 50
          in: query
          name: per_page
          required: false
          type: integer
        - default: title
          description: The field to sort the result on
          in: query
          name: sort
          required: true
          type: string
        - default: desc
          description: The sort direction
          in: query
          name: order
          required: false
          type: string
        - in: query
          name: query
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CachesPage'
      tags:
        - system/messageprocessors
      operationId: caches
      summary: List available caches
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CacheApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CacheApi'
      tags:
        - system/messageprocessors
      operationId: createCache
      summary: Create a new cache
  /system/lookup/caches/validate:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CacheApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ValidationResult'
      tags:
        - system/messageprocessors
      operationId: validateCache
      summary: Validate the cache config
  '/system/lookup/caches/{idOrName}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CacheApi'
      tags:
        - system/messageprocessors
      description: 'The cache cannot be in use by any lookup table, otherwise the request will fail.'
      operationId: deleteCache
      summary: Delete the given cache
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CacheApi'
      tags:
        - system/messageprocessors
      operationId: getCache
      summary: List the given cache
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CacheApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CacheApi'
      tags:
        - system/messageprocessors
      operationId: updateCache
      summary: Update the given cache settings
  /system/lookup/errorstates:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          required: false
          schema:
            $ref: '#/definitions/ErrorStatesRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ErrorStates'
      tags:
        - system/messageprocessors
      operationId: errorStates
      summary: 'Retrieve the runtime error states of the given lookup tables, caches and adapters'
  /system/lookup/tables:
    get:
      produces:
        - application/json
      parameters:
        - default: 1
          in: query
          name: page
          required: false
          type: integer
        - default: 50
          in: query
          name: per_page
          required: false
          type: integer
        - default: title
          description: The field to sort the result on
          in: query
          name: sort
          required: true
          type: string
        - default: desc
          description: The sort direction
          in: query
          name: order
          required: false
          type: string
        - in: query
          name: query
          required: false
          type: string
        - default: false
          in: query
          name: resolve
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LookupTablePage'
      tags:
        - system/messageprocessors
      operationId: tables
      summary: List configured lookup tables
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LookupTableApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LookupTableApi'
      tags:
        - system/messageprocessors
      operationId: createTable
      summary: Create a new lookup table
  /system/lookup/tables/validate:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LookupTableApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ValidationResult'
      tags:
        - system/messageprocessors
      operationId: validateTable
      summary: Validate the lookup table config
  '/system/lookup/tables/{idOrName}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LookupTableApi'
      tags:
        - system/messageprocessors
      operationId: removeTable
      summary: Delete the lookup table
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
        - default: false
          in: query
          name: resolve
          required: false
          type: boolean
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LookupTablePage'
      tags:
        - system/messageprocessors
      operationId: get
      summary: Retrieve the named lookup table
    put:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LookupTableApi'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/LookupTableApi'
      tags:
        - system/messageprocessors
      operationId: updateTable
      summary: Update the given lookup table
  '/system/lookup/tables/{idOrName}/purge':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: idOrName
          required: true
          type: string
        - in: query
          name: key
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/messageprocessors
      operationId: performPurge
      summary: Purge lookup table cache
  '/system/lookup/tables/{name}/query':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          type: string
        - in: query
          name: key
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - system/messageprocessors
      operationId: performLookup
      summary: Query a lookup table
  /system/lookup/types/adapters:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/messageprocessors
      operationId: availableAdapterTypes
      summary: List available data adapter types
  /system/lookup/types/caches:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/messageprocessors
      operationId: availableCacheTypes
      summary: List available caches types
  /system/messageprocessors/config:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MessageProcessorsConfigWithDescriptors'
      tags:
        - system/messages
      operationId: config
      summary: Get message processor configuration
    put:
      produces:
        - application/json
      parameters:
        - in: body
          name: config
          required: true
          schema:
            $ref: '#/definitions/MessageProcessorsConfigWithDescriptors'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MessageProcessorsConfigWithDescriptors'
      tags:
        - system/messages
      operationId: updateConfig
      summary: Update message processor configuration
  /system/messages:
    get:
      produces:
        - application/json
      parameters:
        - description: Page
          in: query
          name: page
          required: false
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/metrics
      operationId: all
      summary: Get internal Graylog system messages
  /system/metrics:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - 'system/metrics/{metricName}/history'
      description: Note that this might return a huge result set.
      operationId: metrics
      summary: Get all metrics
  /system/metrics/multiple:
    post:
      parameters:
        - in: body
          name: Requested metrics
          required: true
          schema:
            $ref: '#/definitions/MetricsReadRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetricsSummaryResponse'
        '400':
          description: Malformed body
      tags:
        - 'system/metrics/{metricName}/history'
      operationId: multipleMetrics
      summary: Get the values of multiple metrics at once
  /system/metrics/names:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetricNamesResponse'
      tags:
        - 'system/metrics/{metricName}/history'
      operationId: metricNames
      summary: Get all metrics keys/names
  '/system/metrics/namespace/{namespace}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: namespace
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetricsSummaryResponse'
        '404':
          description: No such metric namespace
      tags:
        - 'system/metrics/{metricName}/history'
      operationId: byNamespace
      summary: Get all metrics of a namespace
  '/system/metrics/{metricName}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: metricName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema: {}
        '404':
          description: No such metric
      tags:
        - 'system/metrics/{metricName}/history'
      operationId: singleMetric
      summary: Get a single metric
  '/system/metrics/{metricName}/history':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: metricName
          required: true
          type: string
        - default: -1
          description: Only values for after this UTC timestamp (1970 epoch)
          format: int64
          in: query
          name: after
          required: false
          type: integer
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/notifications
      description: The maximum retention time is currently only 5 minutes.
      operationId: historicSingleMetric
      summary: Get history of a single metric
  /system/notifications:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/outputs
      operationId: listNotifications
      summary: Get all active notifications
  '/system/notifications/{notificationType}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: notificationType
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such notification type.
      tags:
        - system/outputs
      operationId: deleteNotification
      summary: Delete a notification
  /system/outputs:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OutputListResponse'
      tags:
        - system/permissions
      operationId: get
      summary: Get a list of all outputs
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateOutputRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Invalid output specification in input.
      tags:
        - system/permissions
      operationId: create
      summary: Create an output
  /system/outputs/available:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/permissions
      operationId: available
      summary: Get all available output modules
  '/system/outputs/{outputId}':
    delete:
      produces:
        - application/json
      parameters:
        - description: The id of the output that should be deleted
          in: path
          name: outputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '404':
          description: No such stream/output on this node.
      tags:
        - system/permissions
      operationId: delete
      summary: Delete output
    get:
      produces:
        - application/json
      parameters:
        - description: The id of the output we want.
          in: path
          name: outputId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OutputSummary'
        '404':
          description: No such output on this node.
      tags:
        - system/permissions
      operationId: get
      summary: Get specific output
    put:
      produces:
        - application/json
      parameters:
        - description: The id of the output that should be deleted
          in: path
          name: outputId
          required: true
          type: string
        - in: body
          name: JSON body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Output'
        '404':
          description: No such output on this node.
      tags:
        - system/permissions
      operationId: update
      summary: Update output
  /system/permissions:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/plugins
      operationId: permissions
      summary: Get all available user permissions.
  '/system/permissions/reader/{username}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ReaderPermissionResponse'
      tags:
        - system/plugins
      operationId: readerPermissions
      summary: Get the initial permissions assigned to a reader account
  /system/plugins:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/PluginList'
      tags:
        - system/processing
      operationId: list
      summary: List all installed plugins on this node.
  /system/processing/pause:
    put:
      responses:
        '200':
          description: No response was specified
      tags:
        - system/serviceManager
      description: 'If the message journal is enabled, incoming messages will be spooled on disk, if it is disabled, you might lose messages from inputs which cannot buffer themselves, like AMQP or Kafka-based inputs.'
      operationId: pauseProcessing
      summary: Pauses message processing
  /system/processing/resume:
    put:
      responses:
        '200':
          description: No response was specified
      tags:
        - system/serviceManager
      operationId: resumeProcessing
      summary: Resume message processing
  /system/serviceManager:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: object
      tags:
        - system/sessions
      operationId: list
      summary: List current status of ServiceManager
  /system/sessions:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SessionValidationResponse'
      tags:
        - system/shutdown
      description: 'Checks the session with the given ID: returns http status 204 (No Content) if session is valid.'
      operationId: validateSession
      summary: Validate an existing session
    post:
      produces:
        - application/json
      parameters:
        - description: Username and credentials
          in: body
          name: Login request
          required: true
          schema:
            $ref: '#/definitions/SessionCreateRequest'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SessionResponse'
      tags:
        - system/shutdown
      description: 'This request creates a new session for a user or reactivates an existing session: the equivalent of logging in.'
      operationId: newSession
      summary: Create a new session
  '/system/sessions/{sessionId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - system/shutdown
      description: 'Destroys the session with the given ID: the equivalent of logging out.'
      operationId: terminateSession
      summary: Terminate an existing session
  /system/shutdown/shutdown:
    post:
      responses:
        '200':
          description: No response was specified
      tags:
        - system/stats
      description: 'Attempts to process all buffered and cached messages before exiting, shuts down inputs first to make sure that no new messages are accepted.'
      operationId: shutdown
      summary: Shutdown this node gracefully.
  /system/stats:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SystemStats'
      tags:
        - system/throughput
      description: This resource returns information about the system this node is running on.
      operationId: systemStats
      summary: System information about this node.
  /system/stats/fs:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/FsStats'
      tags:
        - system/throughput
      description: This resource returns information about the filesystems of this node.
      operationId: fsStats
      summary: Filesystem information about this node.
  /system/stats/jvm:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/JvmStats'
      tags:
        - system/throughput
      description: This resource returns information about the Java Virtual Machine of this node.
      operationId: jvmStats
      summary: JVM information about this node.
  /system/stats/network:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/NetworkStats'
      tags:
        - system/throughput
      description: This resource returns information about the networking system this node is running with.
      operationId: networkStats
      summary: Networking information about this node.
  /system/stats/os:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/OsStats'
      tags:
        - system/throughput
      description: This resource returns information about the operating system this node is running on.
      operationId: osStats
      summary: OS information about this node.
  /system/stats/process:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ProcessStats'
      tags:
        - system/throughput
      description: This resource returns information about the process this node is running as.
      operationId: processStats
      summary: Process information about this node.
  /system/threaddump:
    get:
      produces:
        - text/plain
      responses:
        '200':
          description: No response was specified
          schema: {}
      tags:
        - system/authentication
      operationId: threadDumpAsText
      summary: Get a thread dump as plain text
  /system/throughput:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Throughput'
      tags:
        - users
      operationId: total
      summary: Current throughput of this node in messages per second
  /users:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/UserList'
      description: The permissions assigned to the users are always included.
      operationId: listUsers
      summary: List all users
    post:
      produces:
        - application/json
      parameters:
        - description: 'Must contain username, full_name, email, password and a list of permissions.'
          in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid user details.
      operationId: create
      summary: Create a new user account.
  '/users/{username}':
    delete:
      produces:
        - application/json
      parameters:
        - description: The name of the user to delete.
          in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '400':
          description: When attempting to remove a read only user (e.g. built-in or LDAP user).
      operationId: deleteUser
      summary: Removes a user account.
    get:
      produces:
        - application/json
      parameters:
        - description: The username to return information for.
          in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/UserSummary'
        '404':
          description: The user could not be found.
      description: The user's permissions are only included if a user asks for his own account or for users with the necessary permissions to edit permissions.
      operationId: get
      summary: Get user details
    put:
      produces:
        - application/json
      parameters:
        - description: The name of the user to modify.
          in: path
          name: username
          required: true
          type: string
        - description: Updated user information.
          in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/ChangeUserRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid user details.
      operationId: changeUser
      summary: Modify user details.
  '/users/{username}/password':
    put:
      produces:
        - application/json
      parameters:
        - description: The name of the user whose password to change.
          in: path
          name: username
          required: true
          type: string
        - description: The old and new passwords.
          in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordRequest'
      responses:
        '200':
          description: No response was specified
        '204':
          description: The password was successfully updated. Subsequent requests must be made with the new password.
        '400':
          description: 'The new password is missing, or the old password is missing or incorrect.'
        '403':
          description: The requesting user has insufficient privileges to update the password for the given user.
        '404':
          description: User does not exist.
      operationId: changePassword
      summary: Update the password for a user.
  '/users/{username}/permissions':
    delete:
      produces:
        - application/json
      parameters:
        - description: The name of the user to modify.
          in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
        '500':
          description: When saving the user failed.
      operationId: deletePermissions
      summary: Revoke all permissions for a user without deleting the account.
    put:
      produces:
        - application/json
      parameters:
        - description: The name of the user to modify.
          in: path
          name: username
          required: true
          type: string
        - description: The list of permissions to assign to the user.
          in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/PermissionEditRequest'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid permission data.
      operationId: editPermissions
      summary: Update a user's permission set.
  '/users/{username}/preferences':
    put:
      produces:
        - application/json
      parameters:
        - description: The name of the user to modify.
          in: path
          name: username
          required: true
          type: string
        - description: The map of preferences to assign to the user.
          in: body
          name: JSON body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserPreferences'
      responses:
        '200':
          description: No response was specified
        '400':
          description: Missing or invalid permission data.
      operationId: savePreferences
      summary: Update a user's preferences set.
  '/users/{username}/tokens':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TokenList'
      operationId: listTokens
      summary: Retrieves the list of access tokens for a user
  '/users/{username}/tokens/{name}':
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          type: string
        - description: 'Descriptive name for this token (e.g. ''cronjob'') '
          in: path
          name: name
          required: true
          type: string
        - description: 'Placeholder because POST requests should have a body. Set to ''{}'', the content will be ignored.'
          in: body
          name: JSON Body
          required: false
          schema:
            default: '{}'
            type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Token'
      operationId: generateNewToken
      summary: Generates a new access token for a user
  '/users/{username}/tokens/{token}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          type: string
        - in: path
          name: token
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      operationId: revokeToken
      summary: Removes a token for a user
definitions:
  AddOutputRequest:
    properties:
      outputs:
        items:
          type: string
        type: array
  AddWidgetRequest:
    properties:
      cache_time:
        type: integer
      config:
        type: object
      description:
        type: string
      type:
        type: string
  AlarmCallbackHistoryListSummary:
    properties:
      histories:
        items:
          properties:
            alarmcallbackconfiguration:
              properties:
                configuration:
                  type: object
                created_at:
                  format: date-time
                  type: string
                creator_user_id:
                  type: string
                id:
                  type: string
                stream_id:
                  type: string
                title:
                  type: string
                type:
                  type: string
              type: object
            alert_id:
              type: string
            alertcondition_id:
              type: string
            created_at:
              format: date-time
              type: string
            id:
              type: string
            result:
              type: object
          type: object
        type: array
      total:
        type: integer
  AlarmCallbackListSummary:
    properties:
      alarmcallbacks:
        items:
          properties:
            configuration:
              type: object
            created_at:
              format: date-time
              type: string
            creator_user_id:
              type: string
            id:
              type: string
            stream_id:
              type: string
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  AlarmCallbackSummary:
    properties:
      configuration:
        type: object
      created_at:
        format: date-time
        type: string
      creator_user_id:
        type: string
      id:
        type: string
      stream_id:
        type: string
      title:
        type: string
      type:
        type: string
  AlertConditionListSummary:
    properties:
      conditions:
        items:
          properties:
            parameters:
              type: object
            created_at:
              format: date-time
              type: string
            creator_user_id:
              type: string
            id:
              type: string
            in_grace:
              type: boolean
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  AlertConditionSummary:
    properties:
      parameters:
        type: object
      created_at:
        format: date-time
        type: string
      creator_user_id:
        type: string
      id:
        type: string
      in_grace:
        type: boolean
      title:
        type: string
      type:
        type: string
  AlertListSummary:
    properties:
      alerts:
        items:
          properties:
            condition_id:
              type: string
            condition_parameters:
              type: object
            description:
              type: string
            id:
              type: string
            is_interval:
              type: boolean
            resolved_at:
              format: date-time
              type: string
            stream_id:
              type: string
            triggered_at:
              format: date-time
              type: string
          type: object
        type: array
      total:
        type: integer
  AlertSummary:
    properties:
      condition_id:
        type: string
      condition_parameters:
        type: object
      description:
        type: string
      id:
        type: string
      is_interval:
        type: boolean
      resolved_at:
        format: date-time
        type: string
      stream_id:
        type: string
      triggered_at:
        format: date-time
        type: string
  AllIndices:
    properties:
      all:
        properties:
          indices:
            type: object
        type: object
      closed:
        properties:
          indices:
            items:
              type: string
            type: array
          total:
            type: integer
        type: object
      reopened:
        type: object
  BulkRuleRequest:
    properties:
      rules:
        items:
          type: string
        type: array
  CacheApi:
    properties:
      config:
        properties:
          type:
            type: string
        type: object
      content_pack:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      title:
        type: string
  CachesPage:
    properties:
      caches:
        items:
          properties:
            config:
              properties:
                type:
                  type: string
              type: object
            content_pack:
              type: string
            description:
              type: string
            id:
              type: string
            name:
              type: string
            title:
              type: string
          type: object
        type: array
      count:
        type: integer
      page:
        type: integer
      per_page:
        type: integer
      query:
        type: string
      total:
        type: integer
  ChangePasswordRequest:
    properties:
      old_password:
        type: string
      password:
        type: string
  ChangeUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      permissions:
        items:
          type: string
        type: array
      roles:
        items:
          type: string
        type: array
      session_timeout_ms:
        type: integer
      startpage:
        properties:
          id:
            type: string
          type:
            type: string
        type: object
      timezone:
        type: string
  CloneStreamRequest:
    properties:
      description:
        type: string
      index_set_id:
        type: string
      remove_matches_from_default_stream:
        type: boolean
      title:
        type: string
  ClosedIndices:
    properties:
      indices:
        items:
          type: string
        type: array
      total:
        type: integer
  ClusterConfigList:
    properties:
      classes:
        items:
          type: string
        type: array
      total:
        type: integer
  ClusterHealth:
    properties:
      shards:
        properties:
          active:
            type: integer
          initializing:
            type: integer
          relocating:
            type: integer
          unassigned:
            type: integer
        type: object
      status:
        type: string
  ClusterName:
    properties:
      name:
        type: string
  ClusterStats:
    properties:
      alarm_stats:
        properties:
          alarmcallback_count_by_type:
            type: object
          alert_count:
            type: integer
        type: object
      content_pack_count:
        type: integer
      dashboard_count:
        type: integer
      elasticsearch:
        properties:
          cluster_health:
            properties:
              active_primary_shards:
                type: integer
              active_shards:
                type: integer
              initializing_shards:
                type: integer
              number_of_data_nodes:
                type: integer
              number_of_nodes:
                type: integer
              pending_tasks:
                type: integer
              pending_tasks_time_in_queue:
                items:
                  type: integer
                type: array
              relocating_shards:
                type: integer
              timed_out:
                type: boolean
              unassigned_shards:
                type: integer
            type: object
          cluster_name:
            type: string
          cluster_version:
            type: string
          indices_stats:
            properties:
              field_data_size:
                type: integer
              id_cache_size:
                type: integer
              index_count:
                type: integer
              store_size:
                type: integer
            type: object
          nodes_stats:
            properties:
              client:
                type: integer
              data_only:
                type: integer
              master_data:
                type: integer
              master_only:
                type: integer
              total:
                type: integer
            type: object
          status:
            enum:
              - RED
              - YELLOW
              - GREEN
            type: string
        type: object
      extractor_count:
        type: integer
      extractor_count_by_type:
        type: object
      global_input_count:
        type: integer
      input_count:
        type: integer
      input_count_by_type:
        type: object
      ldap_stats:
        properties:
          active_directory:
            type: boolean
          enabled:
            type: boolean
          role_count:
            type: integer
          role_mapping_count:
            type: integer
        type: object
      mongo:
        properties:
          build_info:
            properties:
              allocator:
                type: string
              bits:
                type: integer
              compiler_flags:
                type: string
              debug:
                type: boolean
              git_version:
                type: string
              javascript_engine:
                type: string
              loader_flags:
                type: string
              max_bson_object_size:
                type: integer
              sys_info:
                type: string
              version:
                type: string
              version_array:
                items:
                  type: integer
                type: array
            type: object
          database_stats:
            properties:
              avg_obj_size:
                type: number
              collections:
                type: integer
              data_file_version:
                properties:
                  major:
                    type: integer
                  minor:
                    type: integer
                type: object
              data_size:
                type: integer
              db:
                type: string
              extent_free_list:
                properties:
                  num:
                    type: integer
                  total_size:
                    type: integer
                type: object
              file_size:
                type: integer
              index_size:
                type: integer
              indexes:
                type: integer
              ns_size_mb:
                type: integer
              num_extents:
                type: integer
              objects:
                type: integer
              storage_size:
                type: integer
            type: object
          host_info:
            properties:
              extra:
                properties:
                  cpu_features:
                    type: string
                  cpu_frequency_mhz:
                    type: string
                  kernel_version:
                    type: string
                  libc_version:
                    type: string
                  max_open_files:
                    type: integer
                  num_pages:
                    type: integer
                  page_size:
                    type: integer
                  scheduler:
                    type: string
                  version_string:
                    type: string
                type: object
              os:
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  version:
                    type: string
                type: object
              system:
                properties:
                  cpu_addr_size:
                    type: integer
                  cpu_arch:
                    type: string
                  current_time:
                    format: date-time
                    type: string
                  hostname:
                    type: string
                  mem_size_mb:
                    type: integer
                  num_cores:
                    type: integer
                  numa_enabled:
                    type: boolean
                type: object
            type: object
          server_status:
            properties:
              host:
                type: string
              connections:
                properties:
                  available:
                    type: integer
                  current:
                    type: integer
                  total_created:
                    type: integer
                type: object
              local_time:
                format: date-time
                type: string
              memory:
                properties:
                  bits:
                    type: integer
                  mapped:
                    type: integer
                  mapped_with_journal:
                    type: integer
                  resident:
                    type: integer
                  supported:
                    type: boolean
                  virtual:
                    type: integer
                type: object
              network:
                properties:
                  bytes_in:
                    type: integer
                  bytes_out:
                    type: integer
                  num_requests:
                    type: integer
                type: object
              pid:
                type: integer
              process:
                type: string
              storage_engine:
                properties:
                  name:
                    type: string
                type: object
              uptime:
                type: integer
              uptime_estimate:
                type: integer
              uptime_millis:
                type: integer
              version:
                type: string
            type: object
          servers:
            items:
              type: string
            type: array
        type: object
      output_count:
        type: integer
      output_count_by_type:
        type: object
      stream_count:
        type: integer
      stream_rule_count:
        type: integer
      stream_rule_count_by_stream:
        type: object
      user_count:
        type: integer
  CollectorList:
    properties:
      collectors:
        items:
          properties:
            active:
              type: boolean
            collector_version:
              type: string
            id:
              type: string
            last_seen:
              format: date-time
              type: string
            node_details:
              properties:
                tags:
                  items:
                    type: string
                  type: array
                ip:
                  type: string
                log_file_list:
                  items:
                    properties:
                      is_dir:
                        type: boolean
                      mod_time:
                        format: date-time
                        type: string
                      path:
                        type: string
                      size:
                        type: integer
                    type: object
                  type: array
                metrics:
                  properties:
                    cpu_idle:
                      type: number
                    disks_75:
                      items:
                        type: string
                      type: array
                    load_1:
                      type: number
                  type: object
                operating_system:
                  type: string
                status:
                  properties:
                    backends:
                      type: object
                    message:
                      type: string
                    status:
                      type: integer
                  type: object
              type: object
            node_id:
              type: string
          type: object
        type: array
  CollectorRegistrationRequest:
    properties:
      node_details:
        properties:
          tags:
            items:
              type: string
            type: array
          ip:
            type: string
          log_file_list:
            items:
              properties:
                is_dir:
                  type: boolean
                mod_time:
                  format: date-time
                  type: string
                path:
                  type: string
                size:
                  type: integer
              type: object
            type: array
          metrics:
            properties:
              cpu_idle:
                type: number
              disks_75:
                items:
                  type: string
                type: array
              load_1:
                type: number
            type: object
          operating_system:
            type: string
          status:
            properties:
              backends:
                type: object
              message:
                type: string
              status:
                type: integer
            type: object
        type: object
      node_id:
        type: string
  CollectorSummary:
    properties:
      active:
        type: boolean
      collector_version:
        type: string
      id:
        type: string
      last_seen:
        format: date-time
        type: string
      node_details:
        properties:
          tags:
            items:
              type: string
            type: array
          ip:
            type: string
          log_file_list:
            items:
              properties:
                is_dir:
                  type: boolean
                mod_time:
                  format: date-time
                  type: string
                path:
                  type: string
                size:
                  type: integer
              type: object
            type: array
          metrics:
            properties:
              cpu_idle:
                type: number
              disks_75:
                items:
                  type: string
                type: array
              load_1:
                type: number
            type: object
          operating_system:
            type: string
          status:
            properties:
              backends:
                type: object
              message:
                type: string
              status:
                type: integer
            type: object
        type: object
      node_id:
        type: string
  ConfigurationBundle:
    properties:
      category:
        type: string
      dashboards:
        items:
          properties:
            dashboard_widgets:
              items:
                properties:
                  cache_time:
                    type: integer
                  col:
                    type: integer
                  configuration:
                    type: object
                  description:
                    type: string
                  height:
                    type: integer
                  row:
                    type: integer
                  type:
                    type: string
                  width:
                    type: integer
                type: object
              type: array
            description:
              type: string
            title:
              type: string
          type: object
        type: array
      description:
        type: string
      grok_patterns:
        items:
          properties:
            name:
              type: string
            pattern:
              type: string
          type: object
        type: array
      id:
        type: string
      inputs:
        items:
          properties:
            configuration:
              type: object
            extractors:
              items:
                properties:
                  condition_type:
                    enum:
                      - NONE
                      - STRING
                      - REGEX
                    type: string
                  condition_value:
                    type: string
                  configuration:
                    type: object
                  converters:
                    items:
                      properties:
                        configuration:
                          type: object
                        type:
                          enum:
                            - NUMERIC
                            - DATE
                            - HASH
                            - SPLIT_AND_COUNT
                            - SYSLOG_PRI_LEVEL
                            - SYSLOG_PRI_FACILITY
                            - TOKENIZER
                            - IP_ANONYMIZER
                            - CSV
                            - LOWERCASE
                            - UPPERCASE
                            - FLEXDATE
                            - LOOKUP_TABLE
                          type: string
                      type: object
                    type: array
                  cursor_strategy:
                    enum:
                      - CUT
                      - COPY
                    type: string
                  order:
                    type: integer
                  source_field:
                    type: string
                  target_field:
                    type: string
                  title:
                    type: string
                  type:
                    enum:
                      - SUBSTRING
                      - REGEX
                      - REGEX_REPLACE
                      - SPLIT_AND_INDEX
                      - COPY_INPUT
                      - GROK
                      - JSON
                      - LOOKUP_TABLE
                    type: string
                type: object
              type: array
            global:
              type: boolean
            id:
              type: string
            static_fields:
              type: object
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      lookup_caches:
        items:
          properties:
            config:
              type: object
            description:
              type: string
            name:
              type: string
            title:
              type: string
          type: object
        type: array
      lookup_data_adapters:
        items:
          properties:
            config:
              type: object
            description:
              type: string
            name:
              type: string
            title:
              type: string
          type: object
        type: array
      lookup_tables:
        items:
          properties:
            cache_name:
              type: string
            data_adapter_name:
              type: string
            default_multi_value:
              type: string
            default_multi_value_type:
              enum:
                - STRING
                - NUMBER
                - OBJECT
                - BOOLEAN
                - 'NULL'
              type: string
            default_single_value:
              type: string
            default_single_value_type:
              enum:
                - STRING
                - NUMBER
                - OBJECT
                - BOOLEAN
                - 'NULL'
              type: string
            description:
              type: string
            name:
              type: string
            title:
              type: string
          type: object
        type: array
      name:
        type: string
      outputs:
        items:
          properties:
            configuration:
              type: object
            id:
              type: string
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      streams:
        items:
          properties:
            default_stream:
              type: boolean
            description:
              type: string
            disabled:
              type: boolean
            id:
              type: string
            matching_type:
              enum:
                - AND
                - OR
              type: string
            outputs:
              items:
                type: string
              type: array
            stream_rules:
              items:
                properties:
                  description:
                    type: string
                  field:
                    type: string
                  inverted:
                    type: boolean
                  type:
                    enum:
                      - EXACT
                      - REGEX
                      - GREATER
                      - SMALLER
                      - PRESENCE
                      - CONTAINS
                      - ALWAYS_MATCH
                    type: string
                  value:
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        type: array
  CreateAlarmCallbackRequest:
    properties:
      configuration:
        type: object
      title:
        type: string
      type:
        type: string
  CreateConditionRequest:
    properties:
      parameters:
        type: object
      title:
        type: string
      type:
        type: string
  CreateDashboardRequest:
    properties:
      description:
        type: string
      title:
        type: string
  CreateExtractorRequest:
    properties:
      condition_type:
        type: string
      condition_value:
        type: string
      converters:
        type: object
      cut_or_copy:
        type: string
      extractor_config:
        type: object
      extractor_type:
        type: string
      order:
        type: integer
      source_field:
        type: string
      target_field:
        type: string
      title:
        type: string
  CreateOutputRequest:
    properties:
      configuration:
        type: object
      content_pack:
        type: string
      streams:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
  CreateSavedSearchRequest:
    properties:
      query:
        type: object
      title:
        type: string
  CreateStaticFieldRequest:
    properties:
      key:
        type: string
      value:
        type: string
  CreateStreamRequest:
    properties:
      content_pack:
        type: string
      description:
        type: string
      index_set_id:
        type: string
      matching_type:
        enum:
          - AND
          - OR
        type: string
      remove_matches_from_default_stream:
        type: boolean
      rules:
        items:
          properties:
            description:
              type: string
            field:
              type: string
            inverted:
              type: boolean
            type:
              type: integer
            value:
              type: string
          type: object
        type: array
      title:
        type: string
  CreateStreamRuleRequest:
    properties:
      description:
        type: string
      field:
        type: string
      inverted:
        type: boolean
      type:
        type: integer
      value:
        type: string
  CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      permissions:
        items:
          type: string
        type: array
      roles:
        items:
          type: string
        type: array
      session_timeout_ms:
        type: integer
      startpage:
        properties:
          id:
            type: string
          type:
            type: string
        type: object
      timezone:
        type: string
      username:
        type: string
  DashboardList:
    properties:
      dashboards:
        items:
          type: object
        type: array
      total:
        type: integer
  DataAdapterApi:
    properties:
      config:
        properties:
          type:
            type: string
        type: object
      content_pack:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      title:
        type: string
  DataAdapterPage:
    properties:
      count:
        type: integer
      data_adapters:
        items:
          properties:
            config:
              properties:
                type:
                  type: string
              type: object
            content_pack:
              type: string
            description:
              type: string
            id:
              type: string
            name:
              type: string
            title:
              type: string
          type: object
        type: array
      page:
        type: integer
      per_page:
        type: integer
      query:
        type: string
      total:
        type: integer
  DebugEvent:
    properties:
      date:
        format: date-time
        type: string
      node_id:
        type: string
      text:
        type: string
  DecoratorImpl:
    properties:
      config:
        type: object
      id:
        type: string
      order:
        type: integer
      stream:
        type: string
      type:
        type: string
  DeflectorSummary:
    properties:
      current_target:
        type: string
      is_up:
        type: boolean
  DisplayGettingStarted:
    properties:
      show:
        type: boolean
  ElasticsearchStats:
    properties:
      cluster_health:
        properties:
          active_primary_shards:
            type: integer
          active_shards:
            type: integer
          initializing_shards:
            type: integer
          number_of_data_nodes:
            type: integer
          number_of_nodes:
            type: integer
          pending_tasks:
            type: integer
          pending_tasks_time_in_queue:
            items:
              type: integer
            type: array
          relocating_shards:
            type: integer
          timed_out:
            type: boolean
          unassigned_shards:
            type: integer
        type: object
      cluster_name:
        type: string
      cluster_version:
        type: string
      indices_stats:
        properties:
          field_data_size:
            type: integer
          id_cache_size:
            type: integer
          index_count:
            type: integer
          store_size:
            type: integer
        type: object
      nodes_stats:
        properties:
          client:
            type: integer
          data_only:
            type: integer
          master_data:
            type: integer
          master_only:
            type: integer
          total:
            type: integer
        type: object
      status:
        enum:
          - RED
          - YELLOW
          - GREEN
        type: string
  ErrorStates:
    properties:
      caches:
        type: object
      data_adapters:
        type: object
      tables:
        type: object
  ErrorStatesRequest:
    properties:
      caches:
        items:
          type: string
        type: array
      data_adapters:
        items:
          type: string
        type: array
      tables:
        items:
          type: string
        type: array
  ExportBundle:
    properties:
      category:
        type: string
      dashboards:
        items:
          type: string
        type: array
      description:
        type: string
      grok_patterns:
        items:
          type: string
        type: array
      inputs:
        items:
          type: string
        type: array
      lookup_caches:
        items:
          type: string
        type: array
      lookup_data_adapters:
        items:
          type: string
        type: array
      lookup_tables:
        items:
          type: string
        type: array
      name:
        type: string
      outputs:
        items:
          type: string
        type: array
      streams:
        items:
          type: string
        type: array
  ExposedConfiguration:
    properties:
      allow_highlighting:
        type: boolean
      allow_leading_wildcard_searches:
        type: boolean
      gc_warning_threshold:
        type: string
      inputbuffer_processors:
        type: integer
      inputbuffer_ring_size:
        type: integer
      inputbuffer_wait_strategy:
        type: string
      node_id_file:
        type: string
      output_module_timeout:
        type: integer
      outputbuffer_processors:
        type: integer
      plugin_dir:
        type: string
      processbuffer_processors:
        type: integer
      processor_wait_strategy:
        type: string
      ring_size:
        type: integer
      stale_master_timeout:
        type: integer
      stream_processing_max_faults:
        type: integer
      stream_processing_timeout:
        type: integer
  ExtractorSummary:
    properties:
      condition_type:
        type: string
      condition_value:
        type: string
      converter_exceptions:
        type: integer
      converters:
        items:
          type: object
        type: array
      creator_user_id:
        type: string
      cursor_strategy:
        type: string
      exceptions:
        type: integer
      extractor_config:
        type: object
      id:
        type: string
      metrics:
        properties:
          condition:
            type: object
          condition_hits:
            type: integer
          condition_misses:
            type: integer
          converters:
            type: object
          execution:
            properties:
              duration_unit:
                type: string
              rate:
                properties:
                  fifteen_minute:
                    type: number
                  five_minute:
                    type: number
                  mean:
                    type: number
                  one_minute:
                    type: number
                  total:
                    type: number
                type: object
              rate_unit:
                type: string
              time:
                properties:
                  95th_percentile:
                    type: number
                  98th_percentile:
                    type: number
                  99th_percentile:
                    type: number
                  max:
                    type: number
                  mean:
                    type: number
                  min:
                    type: number
                  std_dev:
                    type: number
                type: object
            type: object
          total:
            type: object
        type: object
      order:
        type: integer
      source_field:
        type: string
      target_field:
        type: string
      title:
        type: string
      type:
        type: string
  ExtractorSummaryList:
    properties:
      extractors:
        items:
          properties:
            condition_type:
              type: string
            condition_value:
              type: string
            converter_exceptions:
              type: integer
            converters:
              items:
                type: object
              type: array
            creator_user_id:
              type: string
            cursor_strategy:
              type: string
            exceptions:
              type: integer
            extractor_config:
              type: object
            id:
              type: string
            metrics:
              properties:
                condition:
                  type: object
                condition_hits:
                  type: integer
                condition_misses:
                  type: integer
                converters:
                  type: object
                execution:
                  properties:
                    duration_unit:
                      type: string
                    rate:
                      properties:
                        fifteen_minute:
                          type: number
                        five_minute:
                          type: number
                        mean:
                          type: number
                        one_minute:
                          type: number
                        total:
                          type: number
                      type: object
                    rate_unit:
                      type: string
                    time:
                      properties:
                        95th_percentile:
                          type: number
                        98th_percentile:
                          type: number
                        99th_percentile:
                          type: number
                        max:
                          type: number
                        mean:
                          type: number
                        min:
                          type: number
                        std_dev:
                          type: number
                      type: object
                  type: object
                total:
                  type: object
              type: object
            order:
              type: integer
            source_field:
              type: string
            target_field:
              type: string
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  FailureCount:
    properties:
      count:
        type: integer
  FieldStatsResult:
    properties:
      built_query:
        type: string
      cardinality:
        type: integer
      count:
        type: integer
      max:
        type: number
      mean:
        type: number
      min:
        type: number
      std_deviation:
        type: number
      sum:
        type: number
      sum_of_squares:
        type: number
      time:
        type: integer
      variance:
        type: number
  FilterDescription:
    properties:
      created_at:
        format: date-time
        type: string
      creator_user_id:
        type: string
      description:
        type: string
      field_name:
        type: string
      id: {}
      name:
        type: string
      pattern:
        type: string
  FsStats:
    properties:
      filesystems:
        type: object
  GrokPattern:
    properties:
      content_pack:
        type: string
      id:
        type: string
      name:
        type: string
      pattern:
        type: string
  GrokPatternList:
    properties:
      patterns:
        items:
          properties:
            content_pack:
              type: string
            id:
              type: string
            name:
              type: string
            pattern:
              type: string
          type: object
        type: array
  HistogramResult:
    properties:
      built_query:
        type: string
      interval:
        type: string
      queried_timerange:
        properties:
          from:
            format: date-time
            type: string
          to:
            format: date-time
            type: string
        type: object
      results:
        type: object
      time:
        type: integer
  IndexInfo:
    properties:
      all_shards:
        type: object
      primary_shards:
        properties:
          documents:
            properties:
              count:
                type: integer
              deleted:
                type: integer
            type: object
          flush:
            properties:
              time_seconds:
                type: integer
              total:
                type: integer
            type: object
          get:
            type: object
          index:
            type: object
          merge:
            type: object
          open_search_contexts:
            type: integer
          refresh:
            type: object
          search_fetch:
            type: object
          search_query:
            type: object
          segments:
            type: integer
          store_size_bytes:
            type: integer
        type: object
      reopened:
        type: boolean
      routing:
        items:
          properties:
            active:
              type: boolean
            id:
              type: integer
            node_hostname:
              type: string
            node_id:
              type: string
            node_name:
              type: string
            primary:
              type: boolean
            relocating_to:
              type: string
            state:
              type: string
          type: object
        type: array
  IndexRangeSummary:
    properties:
      begin:
        format: date-time
        type: string
      calculated_at:
        format: date-time
        type: string
      end:
        format: date-time
        type: string
      index_name:
        type: string
      took_ms:
        type: integer
  IndexRangesResponse:
    properties:
      ranges:
        items:
          properties:
            begin:
              format: date-time
              type: string
            calculated_at:
              format: date-time
              type: string
            end:
              format: date-time
              type: string
            index_name:
              type: string
            took_ms:
              type: integer
          type: object
        type: array
      total:
        type: integer
  IndexSetResponse:
    properties:
      index_sets:
        items:
          properties:
            creation_date:
              format: date-time
              type: string
            default:
              type: boolean
            description:
              type: string
            id:
              type: string
            index_analyzer:
              type: string
            index_optimization_disabled:
              type: boolean
            index_optimization_max_num_segments:
              type: integer
            index_prefix:
              type: string
            replicas:
              type: integer
            retention_strategy:
              properties:
                type:
                  type: string
              type: object
            retention_strategy_class:
              type: string
            rotation_strategy:
              properties:
                type:
                  type: string
              type: object
            rotation_strategy_class:
              type: string
            shards:
              type: integer
            title:
              type: string
            writable:
              type: boolean
          type: object
        type: array
      stats:
        type: object
      total:
        type: integer
  IndexSetStats:
    properties:
      documents:
        type: integer
      indices:
        type: integer
      size:
        type: integer
  IndexSetSummary:
    properties:
      creation_date:
        format: date-time
        type: string
      default:
        type: boolean
      description:
        type: string
      id:
        type: string
      index_analyzer:
        type: string
      index_optimization_disabled:
        type: boolean
      index_optimization_max_num_segments:
        type: integer
      index_prefix:
        type: string
      replicas:
        type: integer
      retention_strategy:
        properties:
          type:
            type: string
        type: object
      retention_strategy_class:
        type: string
      rotation_strategy:
        properties:
          type:
            type: string
        type: object
      rotation_strategy_class:
        type: string
      shards:
        type: integer
      title:
        type: string
      writable:
        type: boolean
  IndexSetUpdateRequest:
    properties:
      description:
        type: string
      index_optimization_disabled:
        type: boolean
      index_optimization_max_num_segments:
        type: integer
      replicas:
        type: integer
      retention_strategy:
        properties:
          type:
            type: string
        type: object
      retention_strategy_class:
        type: string
      rotation_strategy:
        properties:
          type:
            type: string
        type: object
      rotation_strategy_class:
        type: string
      shards:
        type: integer
      title:
        type: string
      writable:
        type: boolean
  IndexerOverview:
    properties:
      counts:
        properties:
          events:
            type: integer
        type: object
      deflector:
        properties:
          current_target:
            type: string
          is_up:
            type: boolean
        type: object
      indexer_cluster:
        properties:
          health:
            properties:
              shards:
                properties:
                  active:
                    type: integer
                  initializing:
                    type: integer
                  relocating:
                    type: integer
                  unassigned:
                    type: integer
                type: object
              status:
                type: string
            type: object
          name:
            type: string
        type: object
      indices:
        type: object
  IndicesReadRequest:
    properties:
      indices:
        items:
          type: string
        type: array
  InputCreateRequest:
    properties:
      configuration:
        type: object
      global:
        type: boolean
      node:
        type: string
      title:
        type: string
      type:
        type: string
  InputCreated:
    properties:
      id:
        type: string
  InputDeleted:
    properties:
      id:
        type: string
  InputStateSummary:
    properties:
      detailed_message:
        type: string
      id:
        type: string
      message_input:
        properties:
          attributes:
            type: object
          content_pack:
            type: string
          created_at:
            format: date-time
            type: string
          creator_user_id:
            type: string
          global:
            type: boolean
          id:
            type: string
          name:
            type: string
          node:
            type: string
          static_fields:
            type: object
          title:
            type: string
          type:
            type: string
        type: object
      started_at:
        format: date-time
        type: string
      state:
        type: string
  InputStatesList:
    properties:
      states:
        items:
          properties:
            detailed_message:
              type: string
            id:
              type: string
            message_input:
              properties:
                attributes:
                  type: object
                content_pack:
                  type: string
                created_at:
                  format: date-time
                  type: string
                creator_user_id:
                  type: string
                global:
                  type: boolean
                id:
                  type: string
                name:
                  type: string
                node:
                  type: string
                static_fields:
                  type: object
                title:
                  type: string
                type:
                  type: string
              type: object
            started_at:
              format: date-time
              type: string
            state:
              type: string
          type: object
        type: array
  InputSummary:
    properties:
      attributes:
        type: object
      content_pack:
        type: string
      created_at:
        format: date-time
        type: string
      creator_user_id:
        type: string
      global:
        type: boolean
      id:
        type: string
      name:
        type: string
      node:
        type: string
      static_fields:
        type: object
      title:
        type: string
      type:
        type: string
  InputTypeInfo:
    properties:
      is_exclusive:
        type: boolean
      link_to_docs:
        type: string
      name:
        type: string
      requested_configuration:
        type: object
      type:
        type: string
  InputTypesSummary:
    properties:
      types:
        type: object
  InputsList:
    properties:
      inputs:
        items:
          properties:
            attributes:
              type: object
            content_pack:
              type: string
            created_at:
              format: date-time
              type: string
            creator_user_id:
              type: string
            global:
              type: boolean
            id:
              type: string
            name:
              type: string
            node:
              type: string
            static_fields:
              type: object
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  JournalSummaryResponse:
    properties:
      append_events_per_second:
        type: integer
      enabled:
        type: boolean
      journal_config:
        properties:
          directory:
            type: string
          flush_age:
            format: utc-millisec
            type: integer
          flush_interval:
            type: integer
          max_age:
            format: utc-millisec
            type: integer
          max_size: {}
          segment_age:
            format: utc-millisec
            type: integer
          segment_size: {}
        type: object
      journal_size: {}
      journal_size_limit: {}
      number_of_segments:
        type: integer
      oldest_segment:
        format: date-time
        type: string
      read_events_per_second:
        type: integer
      uncommitted_journal_entries:
        type: integer
  JvmStats:
    properties:
      boot_class_path:
        type: string
      class_path:
        type: string
      garbage_collectors:
        items:
          type: string
        type: array
      input_arguments:
        items:
          type: string
        type: array
      mem:
        properties:
          direct_memory_max:
            type: integer
          heap_init:
            type: integer
          heap_max:
            type: integer
          non_heap_init:
            type: integer
          non_heap_max:
            type: integer
        type: object
      memory_pools:
        items:
          type: string
        type: array
      spec_name:
        type: string
      spec_vendor:
        type: string
      spec_version:
        type: string
      start_time:
        type: integer
      system_properties:
        type: object
      version:
        type: string
      vm_name:
        type: string
      vm_vendor:
        type: string
      vm_version:
        type: string
  LdapSettingsRequest:
    properties:
      active_directory:
        type: boolean
      additional_default_groups:
        items:
          type: string
        type: array
      default_group:
        type: string
      display_name_attribute:
        type: string
      enabled:
        type: boolean
      group_id_attribute:
        type: string
      group_mapping:
        type: object
      group_search_base:
        type: string
      group_search_pattern:
        type: string
      ldap_uri:
        type: string
      search_base:
        type: string
      search_pattern:
        type: string
      system_password:
        type: string
      system_username:
        type: string
      trust_all_certificates:
        type: boolean
      use_start_tls:
        type: boolean
  LdapSettingsResponse:
    properties:
      active_directory:
        type: boolean
      additional_default_groups:
        items:
          type: string
        type: array
      default_group:
        type: string
      display_name_attribute:
        type: string
      enabled:
        type: boolean
      group_id_attribute:
        type: string
      group_mapping:
        type: object
      group_search_base:
        type: string
      group_search_pattern:
        type: string
      ldap_uri:
        type: string
      search_base:
        type: string
      search_pattern:
        type: string
      system_password:
        type: string
      system_username:
        type: string
      trust_all_certificates:
        type: boolean
      use_start_tls:
        type: boolean
  LdapTestConfigRequest:
    properties:
      active_directory:
        type: boolean
      group_id_attribute:
        type: string
      group_search_base:
        type: string
      group_search_pattern:
        type: string
      ldap_uri:
        type: string
      password:
        type: string
      principal:
        type: string
      search_base:
        type: string
      search_pattern:
        type: string
      system_password:
        type: string
      system_username:
        type: string
      test_connect_only:
        type: boolean
      trust_all_certificates:
        type: boolean
      use_start_tls:
        type: boolean
  LdapTestConfigResponse:
    properties:
      connected:
        type: boolean
      entry:
        type: object
      exception:
        type: string
      groups:
        items:
          type: string
        type: array
      login_authenticated:
        type: boolean
      system_authenticated:
        type: boolean
  LocalesResponse:
    properties:
      locales:
        type: object
  LogMessagesSummary:
    properties:
      messages:
        items:
          properties:
            class_name:
              type: string
            context:
              type: object
            level:
              type: string
            marker:
              type: string
            message:
              type: string
            thread_name:
              type: string
            throwable:
              type: string
            timestamp:
              format: date-time
              type: string
          type: object
        type: array
  LoggersSummary:
    properties:
      loggers:
        type: object
      total:
        type: integer
  LookupTableApi:
    properties:
      cache_id:
        type: string
      content_pack:
        type: string
      data_adapter_id:
        type: string
      default_multi_value:
        type: string
      default_multi_value_type:
        enum:
          - STRING
          - NUMBER
          - OBJECT
          - BOOLEAN
          - 'NULL'
        type: string
      default_single_value:
        type: string
      default_single_value_type:
        enum:
          - STRING
          - NUMBER
          - OBJECT
          - BOOLEAN
          - 'NULL'
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      title:
        type: string
  LookupTablePage:
    properties:
      caches:
        type: object
      count:
        type: integer
      data_adapters:
        type: object
      lookup_tables:
        items:
          properties:
            cache_id:
              type: string
            content_pack:
              type: string
            data_adapter_id:
              type: string
            default_multi_value:
              type: string
            default_multi_value_type:
              enum:
                - STRING
                - NUMBER
                - OBJECT
                - BOOLEAN
                - 'NULL'
              type: string
            default_single_value:
              type: string
            default_single_value_type:
              enum:
                - STRING
                - NUMBER
                - OBJECT
                - BOOLEAN
                - 'NULL'
              type: string
            description:
              type: string
            id:
              type: string
            name:
              type: string
            title:
              type: string
          type: object
        type: array
      page:
        type: integer
      per_page:
        type: integer
      query:
        type: string
      total:
        type: integer
  MapDataSearchRequest:
    properties:
      fields:
        items:
          type: string
        type: array
      limit:
        type: integer
      query:
        type: string
      stream_id:
        type: string
      timerange:
        properties:
          type:
            type: string
        type: object
  MapDataSearchResult:
    properties:
      fields:
        type: object
      limit:
        type: integer
      query:
        type: string
      stream_id:
        type: string
      timerange:
        properties:
          type:
            type: string
        type: object
  MessageCountResponse:
    properties:
      events:
        type: integer
  MessageParseRequest:
    properties:
      codec:
        type: string
      configuration:
        type: object
      message:
        type: string
      remote_address:
        type: string
  MessageProcessorsConfigWithDescriptors:
    properties:
      disabled_processors:
        items:
          type: string
        type: array
      processor_order:
        items:
          properties:
            class_name:
              type: string
            name:
              type: string
          type: object
        type: array
  MessageTokens:
    properties:
      tokens:
        items:
          type: string
        type: array
  MetricNamesResponse:
    properties:
      names:
        items:
          type: string
        type: array
  MetricsReadRequest:
    properties:
      metrics:
        items:
          type: string
        type: array
  MetricsSummaryResponse:
    properties:
      metrics:
        items: {}
        type: array
      total:
        type: integer
  MongoStats:
    properties:
      build_info:
        properties:
          allocator:
            type: string
          bits:
            type: integer
          compiler_flags:
            type: string
          debug:
            type: boolean
          git_version:
            type: string
          javascript_engine:
            type: string
          loader_flags:
            type: string
          max_bson_object_size:
            type: integer
          sys_info:
            type: string
          version:
            type: string
          version_array:
            items:
              type: integer
            type: array
        type: object
      database_stats:
        properties:
          avg_obj_size:
            type: number
          collections:
            type: integer
          data_file_version:
            properties:
              major:
                type: integer
              minor:
                type: integer
            type: object
          data_size:
            type: integer
          db:
            type: string
          extent_free_list:
            properties:
              num:
                type: integer
              total_size:
                type: integer
            type: object
          file_size:
            type: integer
          index_size:
            type: integer
          indexes:
            type: integer
          ns_size_mb:
            type: integer
          num_extents:
            type: integer
          objects:
            type: integer
          storage_size:
            type: integer
        type: object
      host_info:
        properties:
          extra:
            properties:
              cpu_features:
                type: string
              cpu_frequency_mhz:
                type: string
              kernel_version:
                type: string
              libc_version:
                type: string
              max_open_files:
                type: integer
              num_pages:
                type: integer
              page_size:
                type: integer
              scheduler:
                type: string
              version_string:
                type: string
            type: object
          os:
            properties:
              name:
                type: string
              type:
                type: string
              version:
                type: string
            type: object
          system:
            properties:
              cpu_addr_size:
                type: integer
              cpu_arch:
                type: string
              current_time:
                format: date-time
                type: string
              hostname:
                type: string
              mem_size_mb:
                type: integer
              num_cores:
                type: integer
              numa_enabled:
                type: boolean
            type: object
        type: object
      server_status:
        properties:
          host:
            type: string
          connections:
            properties:
              available:
                type: integer
              current:
                type: integer
              total_created:
                type: integer
            type: object
          local_time:
            format: date-time
            type: string
          memory:
            properties:
              bits:
                type: integer
              mapped:
                type: integer
              mapped_with_journal:
                type: integer
              resident:
                type: integer
              supported:
                type: boolean
              virtual:
                type: integer
            type: object
          network:
            properties:
              bytes_in:
                type: integer
              bytes_out:
                type: integer
              num_requests:
                type: integer
            type: object
          pid:
            type: integer
          process:
            type: string
          storage_engine:
            properties:
              name:
                type: string
            type: object
          uptime:
            type: integer
          uptime_estimate:
            type: integer
          uptime_millis:
            type: integer
          version:
            type: string
        type: object
      servers:
        items:
          type: string
        type: array
  NetworkStats:
    properties:
      interfaces:
        type: object
      primary_interface:
        type: string
      tcp:
        properties:
          active_opens:
            type: integer
          attempt_fails:
            type: integer
          curr_estab:
            type: integer
          estab_resets:
            type: integer
          in_errs:
            type: integer
          in_segs:
            type: integer
          out_rsts:
            type: integer
          out_segs:
            type: integer
          passive_opens:
            type: integer
          retrans_segs:
            type: integer
        type: object
  NodeSummary:
    properties:
      cluster_id:
        type: string
      hostname:
        type: string
      is_master:
        type: boolean
      last_seen:
        type: string
      node_id:
        type: string
      short_node_id:
        type: string
      transport_address:
        type: string
      type:
        type: string
  NodeSummaryList:
    properties:
      nodes:
        items:
          properties:
            cluster_id:
              type: string
            hostname:
              type: string
            is_master:
              type: boolean
            last_seen:
              type: string
            node_id:
              type: string
            short_node_id:
              type: string
            transport_address:
              type: string
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  OpenIndicesInfo:
    properties:
      indices:
        type: object
  OrderExtractorsRequest:
    properties:
      order:
        type: object
  OsStats:
    properties:
      load_average:
        items:
          type: number
        type: array
      memory:
        properties:
          actual_free:
            type: integer
          actual_used:
            type: integer
          free:
            type: integer
          free_percent:
            type: integer
          total:
            type: integer
          used:
            type: integer
          used_percent:
            type: integer
        type: object
      processor:
        properties:
          cache_size:
            type: integer
          cores_per_socket:
            type: integer
          idle:
            type: integer
          mhz:
            type: integer
          model:
            type: string
          stolen:
            type: integer
          sys:
            type: integer
          total_cores:
            type: integer
          total_sockets:
            type: integer
          user:
            type: integer
          vendor:
            type: string
        type: object
      swap:
        properties:
          free:
            type: integer
          total:
            type: integer
          used:
            type: integer
        type: object
      uptime:
        type: integer
  Output:
    properties:
      configuration:
        type: object
      content_pack:
        type: string
      created_at:
        format: date-time
        type: string
      creator_user_id:
        type: string
      id:
        type: string
      title:
        type: string
      type:
        type: string
  OutputListResponse:
    properties:
      outputs:
        items:
          properties:
            configuration:
              type: object
            content_pack:
              type: string
            created_at:
              format: date-time
              type: string
            creator_user_id:
              type: string
            id:
              type: string
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  OutputSummary:
    properties:
      configuration:
        type: object
      content_pack:
        type: string
      created_at:
        format: date-time
        type: string
      creator_user_id:
        type: string
      id:
        type: string
      title:
        type: string
      type:
        type: string
  PermissionEditRequest:
    properties:
      permissions:
        items:
          type: string
        type: array
  PipelineConnections:
    properties:
      id:
        type: string
      pipeline_ids:
        items:
          type: string
        type: array
      stream_id:
        type: string
  PipelineReverseConnections:
    properties:
      pipeline_id:
        type: string
      stream_ids:
        items:
          type: string
        type: array
  PipelineSource:
    properties:
      created_at:
        format: date-time
        type: string
      description:
        type: string
      errors:
        items:
          properties:
            line:
              type: integer
            position_in_line:
              type: integer
            type:
              type: string
          type: object
        type: array
      id:
        type: string
      modified_at:
        format: date-time
        type: string
      source:
        type: string
      stages:
        items:
          properties:
            match_all:
              type: boolean
            rules:
              items:
                type: string
              type: array
            stage:
              type: integer
          type: object
        type: array
      title:
        type: string
  PluginList:
    properties:
      plugins:
        items:
          properties:
            author:
              type: string
            description:
              type: string
            name:
              type: string
            required_capabilities:
              items:
                type: string
              type: array
            required_version:
              type: string
            unique_id:
              type: string
            url:
              type: string
            version:
              type: string
          type: object
        type: array
      total:
        type: integer
  ProcessStats:
    properties:
      cpu:
        properties:
          percent:
            type: integer
          sys:
            type: integer
          total:
            type: integer
          user:
            type: integer
        type: object
      max_file_descriptors:
        type: integer
      memory:
        properties:
          resident:
            type: integer
          share:
            type: integer
          total_virtual:
            type: integer
        type: object
      open_file_descriptors:
        type: integer
      pid:
        type: integer
  ReaderPermissionResponse:
    properties:
      permissions:
        items:
          type: string
        type: array
  RetentionStrategies:
    properties:
      strategies:
        items:
          properties:
            default_config:
              properties:
                type:
                  type: string
              type: object
            json_schema:
              properties:
                $ref:
                  type: string
                $schema:
                  type: string
                description:
                  type: string
                disallow:
                  items:
                    type: object
                  type: array
                extends:
                  items:
                    type: object
                  type: array
                id:
                  type: string
                readonly:
                  type: boolean
                required:
                  type: boolean
              type: object
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  RetentionStrategyDescription:
    properties:
      default_config:
        properties:
          type:
            type: string
        type: object
      json_schema:
        properties:
          $ref:
            type: string
          $schema:
            type: string
          description:
            type: string
          disallow:
            items:
              type: object
            type: array
          extends:
            items:
              type: object
            type: array
          id:
            type: string
          readonly:
            type: boolean
          required:
            type: boolean
        type: object
      type:
        type: string
  RoleMembershipResponse:
    properties:
      role:
        type: string
      users:
        items:
          properties:
            client_address:
              type: string
            email:
              type: string
            external:
              type: boolean
            full_name:
              type: string
            id:
              type: string
            last_activity:
              format: date-time
              type: string
            permissions:
              items:
                type: string
              type: array
            preferences:
              type: object
            read_only:
              type: boolean
            roles:
              items:
                type: string
              type: array
            session_active:
              type: boolean
            session_timeout_ms:
              type: integer
            startpage:
              properties:
                id:
                  type: string
                type:
                  type: string
              type: object
            timezone:
              type: string
            username:
              type: string
          type: object
        type: array
  RoleResponse:
    properties:
      description:
        type: string
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      read_only:
        type: boolean
  RolesResponse:
    properties:
      roles:
        items:
          properties:
            description:
              type: string
            name:
              type: string
            permissions:
              items:
                type: string
              type: array
            read_only:
              type: boolean
          type: object
        type: array
      total:
        type: integer
  RotationStrategies:
    properties:
      strategies:
        items:
          properties:
            default_config:
              properties:
                type:
                  type: string
              type: object
            json_schema:
              properties:
                $ref:
                  type: string
                $schema:
                  type: string
                description:
                  type: string
                disallow:
                  items:
                    type: object
                  type: array
                extends:
                  items:
                    type: object
                  type: array
                id:
                  type: string
                readonly:
                  type: boolean
                required:
                  type: boolean
              type: object
            type:
              type: string
          type: object
        type: array
      total:
        type: integer
  RotationStrategyDescription:
    properties:
      default_config:
        properties:
          type:
            type: string
        type: object
      json_schema:
        properties:
          $ref:
            type: string
          $schema:
            type: string
          description:
            type: string
          disallow:
            items:
              type: object
            type: array
          extends:
            items:
              type: object
            type: array
          id:
            type: string
          readonly:
            type: boolean
          required:
            type: boolean
        type: object
      type:
        type: string
  RuleSource:
    properties:
      created_at:
        format: date-time
        type: string
      description:
        type: string
      errors:
        items:
          properties:
            line:
              type: integer
            position_in_line:
              type: integer
            type:
              type: string
          type: object
        type: array
      id:
        type: string
      modified_at:
        format: date-time
        type: string
      source:
        type: string
      title:
        type: string
  SearchResponse:
    properties:
      built_query:
        type: string
      decoration_stats:
        properties:
          added_fields:
            items:
              type: string
            type: array
          changed_fields:
            items:
              type: string
            type: array
          removed_fields:
            items:
              type: string
            type: array
        type: object
      fields:
        items:
          type: string
        type: array
      from:
        format: date-time
        type: string
      messages:
        items:
          properties:
            decoration_stats:
              properties:
                added_fields:
                  type: object
                changed_fields:
                  type: object
                removed_fields:
                  type: object
              type: object
            highlight_ranges:
              type: object
            index:
              type: string
            message:
              type: object
          type: object
        type: array
      query:
        type: string
      time:
        type: integer
      to:
        format: date-time
        type: string
      total_results:
        type: integer
      used_indices:
        items:
          properties:
            begin:
              format: date-time
              type: string
            calculated_at:
              format: date-time
              type: string
            end:
              format: date-time
              type: string
            index_name:
              type: string
            took_ms:
              type: integer
          type: object
        type: array
  SessionCreateRequest:
    properties:
      host:
        type: string
      password:
        type: string
      username:
        type: string
  SessionResponse:
    properties:
      session_id:
        type: string
      valid_until:
        format: date-time
        type: string
  SessionValidationResponse:
    properties:
      is_valid:
        type: boolean
      session_id:
        type: string
      username:
        type: string
  SimulationRequest:
    properties:
      input_id:
        type: string
      message:
        type: object
      stream_id:
        type: string
  SimulationResponse:
    properties:
      messages:
        items:
          properties:
            decoration_stats:
              properties:
                added_fields:
                  type: object
                changed_fields:
                  type: object
                removed_fields:
                  type: object
              type: object
            highlight_ranges:
              type: object
            index:
              type: string
            message:
              type: object
          type: object
        type: array
      simulation_trace:
        items:
          properties:
            message:
              type: string
            time:
              type: integer
          type: object
        type: array
      took_microseconds:
        type: integer
  SingleStreamRuleSummaryResponse:
    properties:
      streamrule_id:
        type: string
  SourcesList:
    properties:
      range:
        type: integer
      sources:
        type: object
      took_ms:
        type: integer
      total:
        type: integer
  StreamListResponse:
    properties:
      streams:
        items:
          properties:
            alert_conditions:
              items:
                properties:
                  parameters:
                    type: object
                  created_at:
                    format: date-time
                    type: string
                  creator_user_id:
                    type: string
                  id:
                    type: string
                  in_grace:
                    type: boolean
                  title:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            alert_receivers:
              properties:
                emails:
                  items:
                    type: string
                  type: array
                users:
                  items:
                    type: string
                  type: array
              type: object
            content_pack:
              type: string
            created_at:
              type: string
            creator_user_id:
              type: string
            description:
              type: string
            disabled:
              type: boolean
            id:
              type: string
            index_set_id:
              type: string
            is_default:
              type: boolean
            matching_type:
              type: string
            outputs:
              items:
                properties:
                  configuration:
                    type: object
                  content_pack:
                    type: string
                  created_at:
                    format: date-time
                    type: string
                  creator_user_id:
                    type: string
                  id:
                    type: string
                  title:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            remove_matches_from_default_stream:
              type: boolean
            rules:
              items:
                properties:
                  content_pack:
                    type: string
                  description:
                    type: string
                  field:
                    type: string
                  fields:
                    type: object
                  id:
                    type: string
                  inverted:
                    type: boolean
                  stream_id:
                    type: string
                  type:
                    enum:
                      - EXACT
                      - REGEX
                      - GREATER
                      - SMALLER
                      - PRESENCE
                      - CONTAINS
                      - ALWAYS_MATCH
                    type: string
                  validations:
                    type: object
                  value:
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        type: array
      total:
        type: integer
  StreamResponse:
    properties:
      alert_conditions:
        items:
          properties:
            parameters:
              type: object
            created_at:
              format: date-time
              type: string
            creator_user_id:
              type: string
            id:
              type: string
            in_grace:
              type: boolean
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      alert_receivers:
        properties:
          emails:
            items:
              type: string
            type: array
          users:
            items:
              type: string
            type: array
        type: object
      content_pack:
        type: string
      created_at:
        type: string
      creator_user_id:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      id:
        type: string
      index_set_id:
        type: string
      is_default:
        type: boolean
      matching_type:
        type: string
      outputs:
        items:
          properties:
            configuration:
              type: object
            content_pack:
              type: string
            created_at:
              format: date-time
              type: string
            creator_user_id:
              type: string
            id:
              type: string
            title:
              type: string
            type:
              type: string
          type: object
        type: array
      remove_matches_from_default_stream:
        type: boolean
      rules:
        items:
          properties:
            content_pack:
              type: string
            description:
              type: string
            field:
              type: string
            fields:
              type: object
            id:
              type: string
            inverted:
              type: boolean
            stream_id:
              type: string
            type:
              enum:
                - EXACT
                - REGEX
                - GREATER
                - SMALLER
                - PRESENCE
                - CONTAINS
                - ALWAYS_MATCH
              type: string
            validations:
              type: object
            value:
              type: string
          type: object
        type: array
      title:
        type: string
  StreamRule:
    properties:
      content_pack:
        type: string
      description:
        type: string
      field:
        type: string
      fields:
        type: object
      id:
        type: string
      inverted:
        type: boolean
      stream_id:
        type: string
      type:
        enum:
          - EXACT
          - REGEX
          - GREATER
          - SMALLER
          - PRESENCE
          - CONTAINS
          - ALWAYS_MATCH
        type: string
      validations:
        type: object
      value:
        type: string
  StreamRuleListResponse:
    properties:
      stream_rules:
        items:
          properties:
            content_pack:
              type: string
            description:
              type: string
            field:
              type: string
            fields:
              type: object
            id:
              type: string
            inverted:
              type: boolean
            stream_id:
              type: string
            type:
              enum:
                - EXACT
                - REGEX
                - GREATER
                - SMALLER
                - PRESENCE
                - CONTAINS
                - ALWAYS_MATCH
              type: string
            validations:
              type: object
            value:
              type: string
          type: object
        type: array
      total:
        type: integer
  SubsystemSummary:
    properties:
      subsystems:
        type: object
  SystemJVMResponse:
    properties:
      info:
        type: string
      free_memory:
        type: object
      max_memory:
        type: object
      node_id:
        type: string
      pid:
        type: string
      total_memory:
        type: object
      used_memory:
        type: object
  SystemJobSummary:
    properties:
      info:
        type: string
      description:
        type: string
      id:
        type: string
      is_cancelable:
        type: boolean
      name:
        type: string
      node_id:
        type: string
      percent_complete:
        type: integer
      provides_progress:
        type: boolean
      started_at:
        format: date-time
        type: string
  SystemOverviewResponse:
    properties:
      cluster_id:
        type: string
      codename:
        type: string
      facility:
        type: string
      hostname:
        type: string
      is_processing:
        type: boolean
      lb_status:
        type: string
      lifecycle:
        type: string
      node_id:
        type: string
      operating_system:
        type: string
      started_at:
        type: string
      timezone:
        type: string
      version:
        type: string
  SystemStats:
    properties:
      fs:
        properties:
          filesystems:
            type: object
        type: object
      jvm:
        properties:
          boot_class_path:
            type: string
          class_path:
            type: string
          garbage_collectors:
            items:
              type: string
            type: array
          input_arguments:
            items:
              type: string
            type: array
          mem:
            properties:
              direct_memory_max:
                type: integer
              heap_init:
                type: integer
              heap_max:
                type: integer
              non_heap_init:
                type: integer
              non_heap_max:
                type: integer
            type: object
          memory_pools:
            items:
              type: string
            type: array
          spec_name:
            type: string
          spec_vendor:
            type: string
          spec_version:
            type: string
          start_time:
            type: integer
          system_properties:
            type: object
          version:
            type: string
          vm_name:
            type: string
          vm_vendor:
            type: string
          vm_version:
            type: string
        type: object
      network:
        properties:
          interfaces:
            type: object
          primary_interface:
            type: string
          tcp:
            properties:
              active_opens:
                type: integer
              attempt_fails:
                type: integer
              curr_estab:
                type: integer
              estab_resets:
                type: integer
              in_errs:
                type: integer
              in_segs:
                type: integer
              out_rsts:
                type: integer
              out_segs:
                type: integer
              passive_opens:
                type: integer
              retrans_segs:
                type: integer
            type: object
        type: object
      os:
        properties:
          load_average:
            items:
              type: number
            type: array
          memory:
            properties:
              actual_free:
                type: integer
              actual_used:
                type: integer
              free:
                type: integer
              free_percent:
                type: integer
              total:
                type: integer
              used:
                type: integer
              used_percent:
                type: integer
            type: object
          processor:
            properties:
              cache_size:
                type: integer
              cores_per_socket:
                type: integer
              idle:
                type: integer
              mhz:
                type: integer
              model:
                type: string
              stolen:
                type: integer
              sys:
                type: integer
              total_cores:
                type: integer
              total_sockets:
                type: integer
              user:
                type: integer
              vendor:
                type: string
            type: object
          swap:
            properties:
              free:
                type: integer
              total:
                type: integer
              used:
                type: integer
            type: object
          uptime:
            type: integer
        type: object
      process:
        properties:
          cpu:
            properties:
              percent:
                type: integer
              sys:
                type: integer
              total:
                type: integer
              user:
                type: integer
            type: object
          max_file_descriptors:
            type: integer
          memory:
            properties:
              resident:
                type: integer
              share:
                type: integer
              total_virtual:
                type: integer
            type: object
          open_file_descriptors:
            type: integer
          pid:
            type: integer
        type: object
  SystemThreadDumpResponse:
    properties:
      threaddump:
        type: string
  TermsHistogramResult:
    properties:
      buckets:
        type: object
      built_query:
        type: string
      interval:
        type: string
      queried_timerange:
        properties:
          from:
            format: date-time
            type: string
          to:
            format: date-time
            type: string
        type: object
      size:
        type: integer
      terms:
        items:
          type: string
        type: array
      time:
        type: integer
  TermsResult:
    properties:
      built_query:
        type: string
      missing:
        type: integer
      other:
        type: integer
      terms:
        type: object
      terms_mapping:
        type: object
      time:
        type: integer
      total:
        type: integer
  TermsStatsResult:
    properties:
      built_query:
        type: string
      terms:
        items:
          type: object
        type: array
      time:
        type: integer
  TestMatchResponse:
    properties:
      matches:
        type: boolean
      rules:
        type: object
  Throughput:
    properties:
      throughput:
        type: integer
  Token:
    properties:
      last_access:
        format: date-time
        type: string
      name:
        type: string
      token:
        type: string
  TokenList:
    properties:
      tokens:
        items:
          properties:
            last_access:
              format: date-time
              type: string
            name:
              type: string
            token:
              type: string
          type: object
        type: array
  TrafficHistogram:
    properties:
      decoded:
        type: object
      from:
        format: date-time
        type: string
      input:
        type: object
      output:
        type: object
      to:
        format: date-time
        type: string
  TriggerRequest:
    properties:
      job_name:
        type: string
  UpdateDashboardRequest:
    properties:
      description:
        type: string
      title:
        type: string
  UpdateStreamRequest:
    properties:
      description:
        type: string
      index_set_id:
        type: string
      matching_type:
        type: string
      remove_matches_from_default_stream:
        type: boolean
      title:
        type: string
  UpdateUserPreferences:
    properties:
      preferences:
        type: object
  UpdateWidgetRequest:
    properties:
      cache_time:
        type: integer
      description:
        type: string
  UserList:
    properties:
      users:
        items:
          properties:
            client_address:
              type: string
            email:
              type: string
            external:
              type: boolean
            full_name:
              type: string
            id:
              type: string
            last_activity:
              format: date-time
              type: string
            permissions:
              items:
                type: string
              type: array
            preferences:
              type: object
            read_only:
              type: boolean
            roles:
              items:
                type: string
              type: array
            session_active:
              type: boolean
            session_timeout_ms:
              type: integer
            startpage:
              properties:
                id:
                  type: string
                type:
                  type: string
              type: object
            timezone:
              type: string
            username:
              type: string
          type: object
        type: array
  UserSummary:
    properties:
      client_address:
        type: string
      email:
        type: string
      external:
        type: boolean
      full_name:
        type: string
      id:
        type: string
      last_activity:
        format: date-time
        type: string
      permissions:
        items:
          type: string
        type: array
      preferences:
        type: object
      read_only:
        type: boolean
      roles:
        items:
          type: string
        type: array
      session_active:
        type: boolean
      session_timeout_ms:
        type: integer
      startpage:
        properties:
          id:
            type: string
          type:
            type: string
        type: object
      timezone:
        type: string
      username:
        type: string
  ValidationResult:
    properties:
      errors:
        type: object
      failed:
        type: boolean
  WidgetPositionsRequest:
    properties:
      positions:
        items:
          properties:
            col:
              type: integer
            height:
              type: integer
            id:
              type: string
            row:
              type: integer
            width:
              type: integer
          type: object
        type: array
  WidgetSummary:
    properties:
      cache_time:
        type: integer
      config:
        type: object
      creator_user_id:
        type: string
      description:
        type: string
      id:
        type: string
      type:
        type: string
tags:
  - description: Manage alarm callbacks (aka alert notifications)
    name: alerts/callbacks
  - description: Manage stream alert conditions
    name: alerts/conditions
  - description: Documentation of this API in JSON format.
    name: api-docs
  - description: System information of all nodes in the cluster
    name: cluster
  - description: Cluster-wide deflector handling
    name: cluster/deflector
  - description: Cluster-wide input states
    name: cluster/inputstates
  - description: Cluster-wide System Jobs
    name: cluster/jobs
  - description: Cluster-wide Internal Graylog metrics
    name: cluster/metrics
  - description: Cluster-wide access to internal Graylog loggers
    name: cluster/system/loggers
  - description: Journal information of any nodes in the cluster
    name: 'cluster/{nodeId}/journal'
  - description: Cluster-wide status propagation for LB
    name: 'cluster/{nodeId}/lbstatus'
  - description: Cluster-wide Internal Graylog node metrics
    name: 'cluster/{nodeId}/metrics'
  - description: Plugin information for any node in the cluster
    name: 'cluster/{nodeId}/plugins'
  - description: Cluster-wide processing status control.
    name: 'cluster/{nodeId}/processing'
  - description: Shutdown gracefully nodes in cluster
    name: 'cluster/{nodeId}/shutdown'
  - description: Message counts
    name: count
  - description: Manage dashboards
    name: dashboards
  - description: Manage widgets of an existing dashboard
    name: 'dashboards/{dashboardId}/widgets'
  - description: Message blacklist filters
    name: filters/blacklist
  - description: Single messages
    name: messages
  - description: Manage collector configurations
    name: plugins/org.graylog.plugins.collector
  - description: Management of Graylog Collectors.
    name: plugins/org.graylog.plugins.collector/collectors
  - description: Get map data
    name: plugins/org.graylog.plugins.map/mapdata
  - description: Stream connections of processing pipelines
    name: plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/connections
  - description: Pipelines for the pipeline message processor
    name: plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/pipeline
  - description: Rules for the pipeline message processor
    name: plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/rule
  - description: Simulate pipeline message processor
    name: plugins/org.graylog.plugins.pipelineprocessor/system/pipelines/simulate
  - description: User roles
    name: roles
  - description: Message search decorators
    name: search/decorators
  - description: Saved searches
    name: search/saved
  - description: Message search
    name: search/universal/absolute
  - description: Message search
    name: search/universal/keyword
  - description: Message search
    name: search/universal/relative
  - description: Listing message sources (e.g. hosts sending logs)
    name: sources
  - description: Manage streams
    name: streams
  - description: Manage stream alerts for all streams
    name: streams/alerts
  - description: Manage stream alerts for a given stream
    name: 'streams/{streamId}/alerts'
  - description: Manage stream alert conditions
    name: 'streams/{streamId}/alerts/conditions'
  - description: Manage stream alarm callbacks
    name: 'streams/{streamid}/alarmcallbacks'
  - description: Manage stream alarm callback histories
    name: 'streams/{streamid}/alerts/{alertId}/history'
  - description: Manage stream outputs for a given stream
    name: 'streams/{streamid}/outputs'
  - description: Manage stream rules
    name: 'streams/{streamid}/rules'
  - description: System information of this node.
    name: system
  - description: Manage authentication providers
    name: system/authentication
  - description: Content packs
    name: system/bundles
  - description: Node discovery
    name: system/cluster
  - description: Cluster stats
    name: system/cluster/stats
  - description: Cluster traffic stats
    name: system/cluster/traffic
  - description: Graylog Cluster Configuration
    name: system/cluster_config
  - description: Message codec types of this node
    name: system/codecs/types
  - description: Read-only access to configuration settings
    name: system/configuration
  - description: For debugging local and cluster events.
    name: system/debug/events
  - description: Index deflector management
    name: system/deflector
  - description: Get list of message fields that exist.
    name: system/fields
  - description: Getting Started guide
    name: system/gettingstarted
  - description: Manage grok patterns
    name: system/grok
  - description: Indexer cluster information
    name: system/indexer/cluster
  - description: Indexer failures
    name: system/indexer/failures
  - description: Index information
    name: system/indexer/indices
  - description: Indexing overview
    name: system/indexer/overview
  - description: Index sets
    name: system/indices/index_sets
  - description: Index timeranges
    name: system/indices/ranges
  - description: Index retention strategy settings
    name: system/indices/retention
  - description: Index rotation strategy settings
    name: system/indices/rotation
  - description: Message inputs
    name: system/inputs
  - description: Message input types of this node
    name: system/inputs/types
  - description: Extractors of an input
    name: 'system/inputs/{inputId}/extractors'
  - description: Static fields of an input
    name: 'system/inputs/{inputId}/staticfields'
  - description: Message input states of this node
    name: system/inputstates
  - description: System Jobs
    name: system/jobs
  - description: Message journal information of this node.
    name: system/journal
  - description: Status propagation for load balancers
    name: system/lbstatus
  - description: LDAP settings
    name: system/ldap
  - description: Internal Graylog loggers
    name: system/loggers
  - description: Lookup tables
    name: system/lookup
  - description: Manage message processors
    name: system/messageprocessors
  - description: Internal Graylog messages
    name: system/messages
  - description: Internal Graylog metrics
    name: system/metrics
  - description: Get history of metrics
    name: 'system/metrics/{metricName}/history'
  - description: Notifications generated by the system
    name: system/notifications
  - description: Manage outputs
    name: system/outputs
  - description: Retrieval of system permissions.
    name: system/permissions
  - description: Plugin information
    name: system/plugins
  - description: System processing status control.
    name: system/processing
  - description: ServiceManager Status
    name: system/serviceManager
  - description: Login for interactive user sessions
    name: system/sessions
  - description: Shutdown this node gracefully.
    name: system/shutdown
  - description: Node system stats
    name: system/stats
  - description: Message throughput of this node
    name: system/throughput
  - description: User accounts
    name: users
